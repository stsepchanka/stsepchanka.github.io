{"version":3,"sources":["webpack:///./app/main.ts","webpack:///./app/app.module.ts","webpack:///./app/Components/Cities/cities.module.ts","webpack:///./app/Components/City/city.module.ts","webpack:///./app/Components/City/city.component.ts","webpack:///./app/Entities/city.ts","webpack:///./app/Components/Wind/wind.component.ts","webpack:///./app/Entities/wind.ts","webpack:///./app/Components/WeatherIcon/weatherIcon.component.ts","webpack:///./app/Pipes/kelvin2celsius.pipe.ts","webpack:///./app/Pipes/temperature.pipe.ts","webpack:///./app/Directives/tempcolor.directive.ts","webpack:///./app/Directives/rotate.directive.ts","webpack:///./app/Components/Cities/cities.component.ts","webpack:///./app/Services/location.service.ts","webpack:///./app/Services/logger.service.ts","webpack:///./app/Enum/statusMessage.ts","webpack:///./app/Entities/cityCoordinates.ts","webpack:///./app/Services/weather.service.ts","webpack:///./app/Components/CitiesAsync/citiesAsync.module.ts","webpack:///./app/Components/CitiesAsync/citiesAsync.component.ts","webpack:///./app/Components/Map/map.module.ts","webpack:///./~/angular2-google-maps/core/index.js","webpack:///./~/angular2-google-maps/core/directives.js","webpack:///./~/angular2-google-maps/core/directives/google-map.js","webpack:///./~/angular2-google-maps/core/services/google-maps-api-wrapper.js","webpack:///./~/angular2-google-maps/core/services/maps-api-loader/maps-api-loader.js","webpack:///./~/angular2-google-maps/core/services/managers/circle-manager.js","webpack:///./~/angular2-google-maps/core/services/managers/info-window-manager.js","webpack:///./~/angular2-google-maps/core/services/managers/marker-manager.js","webpack:///./~/angular2-google-maps/core/services/managers/polygon-manager.js","webpack:///./~/angular2-google-maps/core/services/managers/polyline-manager.js","webpack:///./~/angular2-google-maps/core/directives/google-map-circle.js","webpack:///./~/angular2-google-maps/core/directives/google-map-info-window.js","webpack:///./~/angular2-google-maps/core/directives/google-map-marker.js","webpack:///./~/angular2-google-maps/core/directives/google-map-polygon.js","webpack:///./~/angular2-google-maps/core/directives/google-map-polyline.js","webpack:///./~/angular2-google-maps/core/directives/google-map-polyline-point.js","webpack:///./~/angular2-google-maps/core/services.js","webpack:///./~/angular2-google-maps/core/services/maps-api-loader/lazy-maps-api-loader.js","webpack:///./~/angular2-google-maps/core/utils/browser-globals.js","webpack:///./~/angular2-google-maps/core/services/maps-api-loader/noop-maps-api-loader.js","webpack:///./~/angular2-google-maps/core/core-module.js","webpack:///./app/Components/Map/map.component.ts","webpack:///./app/Components/WeatherInCity/weatherInCity.module.ts","webpack:///./app/Components/WeatherInCity/weatherInCity.component.ts","webpack:///./app/Pipes/weather.pipe.ts","webpack:///./app/app.component.ts","webpack:///./app/Components/PageNotFound/pagenotfound.component.ts"],"names":[],"mappings":"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BACpB,MAAM,EAAE,yCAAyC;kBAClD,CAAC;cACH;aACD,YAAY,EAAE;iBACZ,4BAAY;cACb;aACD,OAAO,EAAE;iBACP,4BAAY;cACb;UACF,CAAC;;kBAAA;KAGF,gBAAC;AAAD,EAAC;AADY,kBAAS,YACrB;;;;;;;;ACrBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,YAAY;AACvB,YAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,oDAAoD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D,wBAAwB,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,8DAA8D,EAAE;AACnI,0CAAyC,sCAAsC,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,uEAAuE,kBAAkB,EAAE,EAAE,EAAE;AACnI,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,4CAA4C;AACrF,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,oEAAmE,iCAAiC,EAAE;AACtG,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA,sFAAqF,yBAAyB,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA,cAAa,wCAAwC;AACrD,cAAa,kDAAkD;AAC/D;AACA;AACA;AACA,8BAA6B,UAAU,mDAAmD;AAC1F;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,8CAA8C;AACzE,uEAAsE,uBAAuB,wBAAwB,OAAO,gCAAgC,qBAAqB,OAAO;AACxL;AACA,kBAAiB,IAAI;AACrB;AACA;AACA;AACA,UAAS,2BAA2B;AACpC,UAAS,wDAAwD;AACjE;AACA;AACA,EAAC;AACD;AACA,uC;;;;;;;ACtTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,8BAA8B,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,sCAAqC,uBAAuB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,4CAA2C,4CAA4C,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,8BAA8B,2BAA2B,EAAE,EAAE,EAAE;AACxH,cAAa;AACb,UAAS;AACT;AACA;AACA,+CAA8C,8BAA8B,EAAE;AAC9E;AACA,2DAA0D,uCAAuC,sBAAsB,EAAE,EAAE;AAC3H;AACA,+CAA8C,wBAAwB,EAAE;AACxE;AACA;AACA,+CAA8C,0BAA0B,EAAE;AAC1E;AACA;AACA,+CAA8C,wBAAwB,EAAE;AACxE;AACA;AACA,+CAA8C,0BAA0B,EAAE;AAC1E;AACA;AACA,+CAA8C,8BAA8B,EAAE;AAC9E;AACA;AACA,+CAA8C,gCAAgC,EAAE;AAChF;AACA;AACA;AACA;AACA,gEAA+D,kBAAkB;AACjF;AACA;AACA;AACA;AACA,6CAA4C,gDAAgD,EAAE;AAC9F;AACA;AACA,UAAS,0BAA0B;AACnC;AACA;AACA;AACA,UAAS,yCAAyC;AAClD,UAAS,uBAAuB;AAChC;AACA;AACA,EAAC;AACD;AACA,oD;;;;;;;ACxHA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,4C;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,8CAA8C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,6DAA4D,8BAA8B,EAAE;AAC5F;AACA;AACA;AACA,6DAA4D,sBAAsB,EAAE;AACpF;AACA;AACA;AACA,6DAA4D,sBAAsB,EAAE;AACpF;AACA;AACA;AACA,6DAA4D,sBAAsB,EAAE;AACpF;AACA;AACA,6DAA4D,qBAAqB,8CAA8C,EAAE,EAAE;AACnI;AACA;AACA;AACA,6DAA4D,uCAAuC,EAAE;AACrG;AACA;AACA;AACA,6DAA4D,yCAAyC,EAAE;AACvG;AACA;AACA;AACA,6DAA4D,qCAAqC,EAAE;AACnG;AACA;AACA;AACA,6DAA4D,mCAAmC,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AACtI,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS,0BAA0B;AACnC;AACA;AACA;AACA,UAAS,wDAAwD;AACjE,UAAS,uBAAuB;AAChC;AACA;AACA,EAAC;AACD;AACA,2C;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,qEAAoE;AACpE;AACA;AACA,UAAS,EAAE,EAAE;AACb;AACA;AACA;AACA,iCAAgC,uCAAuC,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,mFAAkF,4BAA4B,EAAE;AAChH,kBAAiB;AACjB;AACA,2EAA0E,oBAAoB,EAAE;AAChG,UAAS;AACT;AACA;AACA,qEAAoE,kBAAkB,EAAE;AACxF;AACA;AACA,qEAAoE,8BAA8B,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,UAAS,0BAA0B;AACnC;AACA;AACA;AACA,UAAS,wDAAwD;AACjE,UAAS,uBAAuB;AAChC,UAAS,wCAAwC;AACjD;AACA;AACA,EAAC;AACD;AACA,gD;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,6DAA4D,uBAAuB,8CAA8C,EAAE,EAAE;AACrI;AACA;AACA,6DAA4D,iCAAiC,EAAE;AAC/F;AACA;AACA,6DAA4D,0BAA0B,EAAE;AACxF;AACA;AACA,6DAA4D,yCAAyC,EAAE;AACvG;AACA;AACA,6DAA4D,kCAAkC,EAAE;AAChG;AACA;AACA,6DAA4D,qCAAqC,EAAE;AACnG;AACA;AACA,6DAA4D,qCAAqC,EAAE;AACnG;AACA;AACA,6DAA4D,mCAAmC,EAAE;AACjG;AACA;AACA;AACA,wBAAuB,8CAA8C;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,cAAa;AACb,UAAS;AACT;AACA;AACA,UAAS,0BAA0B;AACnC;AACA;AACA;AACA,UAAS,wDAAwD;AACjE,UAAS,uBAAuB;AAChC;AACA;AACA,EAAC;AACD;AACA,2C;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,qCAAqC,2BAA2B,EAAE,EAAE,EAAE;AAC1G;AACA;AACA,4DAA2D,uBAAuB,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,wDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,cAAa;AACb,UAAS;AACT;AACA;AACA,UAAS,0BAA0B;AACnC;AACA;AACA;AACA,UAAS,wDAAwD;AACjE,UAAS,uBAAuB;AAChC;AACA;AACA,EAAC;AACD;AACA,4C;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,qCAAqC,iBAAiB,EAAE,EAAE,EAAE;AAChG;AACA;AACA,6DAA4D,uBAAuB,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,wDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,cAAa;AACb,UAAS;AACT;AACA;AACA,UAAS,0BAA0B;AACnC;AACA;AACA;AACA,UAAS,wDAAwD;AACjE,UAAS,uBAAuB;AAChC;AACA;AACA,EAAC;AACD;AACA,6C;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,0DAA0D,EAAE;AAC/H,0CAAyC,sCAAsC,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAgF,kCAAkC,EAAE;AACpH;AACA;AACA;AACA,uDAAsD,uCAAuC;AAC7F,0BAAyB;AACzB;AACA;AACA,4CAA2C,UAAU,mDAAmD,EAAE;AAC1G;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA,wDAAuD,iBAAiB,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,sCAAsC;AACjG,4DAA2D,sCAAsC;AACjG;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,IAAI;AACrB;AACA;AACA;AACA,UAAS,wCAAwC;AACjD;AACA;AACA,EAAC;AACD;AACA,8C;;;;;;;ACpMA;AACA;AACA;AACA;AACA;AACA,4DAA2D,0BAA0B;AACrF;AACA;AACA;AACA,YAAW,YAAY;AACvB,YAAW,8DAA8D;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,2EAA2E,EAAE;AAChJ,0CAAyC,sCAAsC,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA,2DAA0D,2CAA2C;AACrG;AACA;AACA;AACA;AACA;AACA,sEAAqE,oCAAoC,EAAE;AAC3G;AACA;AACA,yDAAwD,iBAAiB;AACzE;AACA,+DAA8D,yDAAyD;AACvH;AACA,kEAAiE,gDAAgD;AACjH;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,kBAAiB,IAAI;AACrB;AACA;AACA;AACA,UAAS,iDAAiD;AAC1D,UAAS,2BAA2B;AACpC;AACA;AACA,EAAC;AACD;AACA,mD;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,oBAAoB;AAC1E;AACA;AACA;AACA,YAAW,YAAY;AACvB,YAAW,qCAAqC;AAChiCAAgC,UAAU,2CAA2C,EAAE;AACvF,UAAS;AACT;AACA;AACA;AACA,mCAAkC,UAAU,2CAA2C,EAAE;AACzF,UAAS;AACT;AACA;AACA;AACA,kCAAiC,UAAU,2CAA2C,EAAE;AACxF,UAAS;AACT;AACA;AACA;AACA,qDAAoD,iBAAiB;AACrE;AACA,2DAA0D,qDAAqD;AAC/G;AACA;AACA;AACA;AACA,6DAA4D,wBAAwB,EAAE;AACtF;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,IAAI;AACrB;AACA;AACA;AACA,UAAS,wCAAwC;AACjD;AACA;AACA,yBAAwB,uFAAuF;AAC/G;AACA;AACA,EAAC;AACD;AACA,8C;;;;;;;AC7KA;AACA;AACA;AACA;AACA,iDAAgD;AAChD;AACA;AACA;AACA,YAAW,YAAY;AACvB,YAAW,kDAAkD;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA,SAAQ,mBAAmB;AAC3B,SAAQ,mBAAmB;AAC3B,SAAQ,mBAAmB;AAC3B,SAAQ,mBAAmB;AAC3B,SAAQ;AACR;AACA;AACA;AACA,SAAQ,mBAAmB;AAC3B,SAAQ,mBAAmB;AAC3B,SAAQ,mBAAmB;AAC3B,SAAQ,mBAAmB;AAC3B,SAAQ;AACR;AACA,SAAQ,kBAAkB;AAC1B,SAAQ,kBAAkB;AAC1B,SAAQ,kBAAkB;AAC1B,SAAQ,kBAAkB;AAC1B,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,wCAAwC,iCAAiC,EAAE,EAAE;AAC1F,cAAa,0CAA0C,oCAAoC,EAAE,EAAE;AAC/F,cAAa,uCAAuC,gCAAgC,EAAE,EAAE;AACxF,cAAa,0CAA0C,mCAAmC,EAAE,EAAE;AAC9F,cAAa,4CAA4C,qCAAqC,EAAE,EAAE;AAClG,cAAa,4CAA4C,qCAAqC,EAAE,EAAE;AAClG,cAAa,4CAA4C,qCAAqC,EAAE,EAAE;AAClG,cAAa,2CAA2C,oCAAoC,EAAE,EAAE;AAChG,cAAa,4CAA4C,qCAAqC,EAAE,EAAE;AAClG,cAAa,0CAA0C,mCAAmC,EAAE,EAAE;AAC9F,cAAa,6CAA6C,sCAAsC,EAAE,EAAE;AACpG;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,mCAAkC,yEAAyE,EAAE;AAC7G;AACA;AACA;AACA,UAAS,IAAI;AACb;AACA;AACA,sDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA,mDAAkD,wBAAwB,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,IAAI;AACrB;AACA;AACA;AACA,UAAS,0CAA0C;AACnD;AACA;AACA,EAAC;AACD;AACA,+C;;;;;;;AClOA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD;AAClD;AACA;AACA;AACA,YAAW,YAAY;AACvB,YAAW,6DAA6D;AACxsEAAqE,oDAAoD,EAAE;AAC3H;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,4DAA2D,2DAA2D,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,2EAA2E,EAAE;AAChJ,0CAAyC,6CAA6C,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,wCAAwC,iCAAiC,EAAE,EAAE;AAC1F,cAAa,0CAA0C,oCAAoC,EAAE,EAAE;AAC/F,cAAa,uCAAuC,gCAAgC,EAAE,EAAE;AACxF,cAAa,0CAA0C,mCAAmC,EAAE,EAAE;AAC9F,cAAa,4CAA4C,qCAAqC,EAAE,EAAE;AAClG,cAAa,4CAA4C,qCAAqC,EAAE,EAAE;AAClG,cAAa,4CAA4C,qCAAqC,EAAE,EAAE;AAClG,cAAa,2CAA2C,oCAAoC,EAAE,EAAE;AAChG,cAAa,4CAA4C,qCAAqC,EAAE,EAAE;AAClG,cAAa,0CAA0C,mCAAmC,EAAE,EAAE;AAC9F,cAAa,6CAA6C,sCAAsC,EAAE,EAAE;AACpG;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,iBAAiB;AACvE;AACA;AACA;AACA;AACA,mDAAkD,wBAAwB,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,IAAI;AACrB;AACA;AACA;AACA,UAAS,4CAA4C;AACrD;AACA;AACA,qBAAoB,gGAAgG;AACpH;AACA;AACA,EAAC;AACD;AACA,gD;;;;;;;AC5MA;AACA;AACA;AACA,+EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,iCAAiC,6CAA6C,IAAI;AAC3F;AACA;AACA;AACA;AACA,uBAAsB,qBAAqB;AAC3C,wBAAuB,qBAAqB;AAC5C,8BAA6B,sBAAsB;AACnD;AACA;AACA,EAAC;AACD;AACA,sD;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;ACrBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,4EAA4E;AAC7E;AACA;AACA,qFAAoF;AACpF,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E,WAAW;AACvF,gDAA+C,eAAe;AAC9D,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,+BAA+B,EAAE;AACnE;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA,qBAAoB;AACpB,UAAS;AACT,oCAAmC,sCAAsC,EAAE;AAC3E;AACA;AACA;AACA;AACA,UAAS,0BAA0B;AACnC;AACA;AACA;AACA,UAAS,gCAAgC,6DAA6D,IAAI;AAC1G,UAAS,qCAAqC;AAC9C,UAAS,uCAAuC;AAChD;AACA;AACA,EAAC;AACD;AACA,iD;;;;;;;ACtGA;AACA;AACA;AACA;AACA,wDAAuD,eAAe;AACtE;AACA,EAAC;AACD;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","file":"./dist/app.bundle.js","sourcesContent":["import {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\nimport {AppModule} from './app.module'\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/main.ts","import { NgModule }      from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport 'rxjs/Rx';\r\n\r\n//import 'rxjs/add/observable/throw';\r\n//import 'rxjs/add/operator/catch';\r\n//import 'rxjs/add/operator/map';\r\n\r\nimport { CitiesModule } from './Components/Cities/cities.module';\r\nimport { CitiesAsyncModule } from './Components/CitiesAsync/citiesAsync.module';\r\nimport { MapModule } from './Components/Map/map.module';\r\nimport { WeatherInCityModule } from './Components/WeatherInCity/weatherInCity.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { PageNotFoundComponent } from './Components/PageNotFound/pagenotfound.component';\r\nimport { CitiesComponent } from './Components/Cities/cities.component';\r\nimport { CitiesAsyncComponent } from './Components/CitiesAsync/citiesAsync.component';\r\nimport { MapComponent } from './Components/Map/map.component';\r\nimport { WeatherInCityComponent } from './Components/WeatherInCity/weatherInCity.component';\r\n\r\nimport { LocationService } from './Services/location.service';\r\nimport { WeatherService } from './Services/weather.service';\r\nimport { LoggerService } from './Services/logger.service';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'cities', component: CitiesComponent },\r\n  { path: 'cities-async', component: CitiesAsyncComponent },\r\n  { path: 'map', component: MapComponent },\r\n  { path: 'weather-in-city', component: WeatherInCityComponent },\r\n  { path: '', component: CitiesComponent },\r\n  { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    CitiesModule,\r\n    CitiesAsyncModule,\r\n    MapModule,\r\n    WeatherInCityModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    PageNotFoundComponent\r\n  ],\r\n  providers: [\r\n    LocationService,\r\n    WeatherService,\r\n    LoggerService\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\n\r\nexport class AppModule {\r\n}\n\n\n// WEBPACK FOOTER //\n// ./app/app.module.ts","import { NgModule }      from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CityModule } from './../City/city.module';\r\n\r\nimport { CitiesComponent } from './cities.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CityModule\r\n  ],\r\n  declarations: [\r\n    CitiesComponent,\r\n  ],\r\n  exports: [\r\n    CitiesComponent\r\n  ]\r\n})\r\n\r\nexport class CitiesModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/Components/Cities/cities.module.ts","import { NgModule }      from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CityComponent } from './city.component';\r\nimport { WindComponent } from './../Wind/wind.component';\r\nimport { WeatherIconComponent } from './../WeatherIcon/weatherIcon.component';\r\n\r\nimport {Kelvin2celsiusPipe } from './../../Pipes/kelvin2celsius.pipe';\r\nimport {TemperaturePipe } from './../../Pipes/temperature.pipe';\r\n\r\nimport { TempcolorDirective } from './../../Directives/tempcolor.directive';\r\nimport { RotateDirective } from './../../Directives/rotate.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    CityComponent,\r\n    WindComponent,\r\n    WeatherIconComponent,\r\n    Kelvin2celsiusPipe,\r\n    TemperaturePipe,\r\n    TempcolorDirective,\r\n    RotateDirective\r\n  ],\r\n  exports: [\r\n    CityComponent\r\n  ]\r\n})\r\n\r\nexport class CityModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/Components/City/city.module.ts","import { Component, Input, Output, ChangeDetectionStrategy, EventEmitter } from '@angular/core';\r\n\r\nimport { City } from './../../Entities/city';\r\n\r\n@Component({\r\n    selector: 'city',\r\n    templateUrl: './app/Components/City/city.component.html',\r\n    styleUrls: ['./app/Components/City/city.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class CityComponent {\r\n    @Input() city: City;\r\n    @Input() isDisplayLetter: Boolean;\r\n    @Input('actions') isWithActions: Boolean;\r\n    @Input() isFavorite: Boolean;\r\n    @Output() favorite = new EventEmitter();\r\n    @Output() remove = new EventEmitter();\r\n\r\n    constructor() {}\r\n\r\n    onStarClick() {\r\n        this.favorite.emit(!this.isFavorite);\r\n    }\r\n    onRemove() {\r\n        this.remove.emit(this.city.name);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/Components/City/city.component.ts","import {CityCoordinates} from './cityCoordinates';\r\nimport {Cloud} from './cloud';\r\nimport {WeatherDescription} from './weatherDescription';\r\nimport {WeatherMain} from './weatherMain';\r\nimport {Wind} from './wind';\r\n\r\nexport class City {\r\n    id: number;\r\n    name: string\r\n    coord: CityCoordinates;\r\n    main: WeatherMain;\r\n    wind: Wind;\r\n    clouds: Cloud;\r\n    weather: WeatherDescription[];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./app/Entities/city.ts","import { Component, Input } from '@angular/core';\r\n\r\nimport { Wind } from './../../Entities/wind';\r\n\r\n@Component({\r\n    selector: 'wind',\r\n    templateUrl: './app/Components/Wind/wind.component.html',\r\n    styleUrls: ['./app/Components/Wind/wind.component.css']\r\n})\r\n\r\nexport class WindComponent {\r\n    @Input() wind: Wind;\r\n\r\n    constructor() {}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/Components/Wind/wind.component.ts","export class Wind {\r\n    speed: number;\r\n    deg: number;\r\n    gust: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./app/Entities/wind.ts","import { Component, Input } from '@angular/core';\r\n\r\nimport { Wind } from './../../Entities/wind';\r\n\r\n@Component({\r\n    selector: 'weather-icon',\r\n    templateUrl: './app/Components/WeatherIcon/weatherIcon.component.html',\r\n    styleUrls: ['./app/Components/WeatherIcon/weatherIcon.component.css']\r\n})\r\n\r\nexport class WeatherIconComponent {\r\n    @Input() icon: string;\r\n\r\n    iconUrl:string = 'http://openweathermap.org/img/w/';\r\n\r\n    constructor() {}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/Components/WeatherIcon/weatherIcon.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'kelvin2celsius'})\r\n\r\nexport class Kelvin2celsiusPipe implements PipeTransform {\r\n    \r\n    kelvin2celsius:number = 273.15;\r\n\r\n    transform(value: number):number {\r\n        return Math.round(value - this.kelvin2celsius);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./app/Pipes/kelvin2celsius.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'temperature' })\r\n\r\nexport class TemperaturePipe implements PipeTransform {\r\n\r\n    transform(value: number):string {\r\n        return (value > 0 ? '+' : '') + value.toString();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./app/Pipes/temperature.pipe.ts","import { Directive, ElementRef, OnInit, Input } from '@angular/core';\r\n\r\nclass TempColor {\r\n    temp: number;\r\n    color: number;\r\n    constructor(temp: number, color: number) {\r\n        this.temp = temp;\r\n        this.color = color;\r\n    }\r\n}\r\n\r\n@Directive({\r\n  selector: '[tempColor]'\r\n})\r\n\r\nexport class TempcolorDirective implements OnInit {\r\n    @Input() tempColor: number;\r\n\r\n    constructor(private el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        let color: number;\r\n\r\n        if (this.tempColor < 0) {\r\n           color = Math.max(0xFF + this.tempColor * 0x5, 0x30);\r\n        } else {\r\n            color = 0xFF0000 + Math.max(0x0, 0x60 - this.tempColor * 0x3)*0x100 - Math.min(0, 0x60 - this.tempColor * 0x3);\r\n        }\r\n\r\n        this.el.nativeElement.style.color = ('0000' + color.toString(16)).slice(-6);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./app/Directives/tempcolor.directive.ts","import { Directive, ElementRef, OnInit, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[rotate]'\r\n})\r\n\r\nexport class RotateDirective implements OnInit {\r\n    @Input() rotate: number = 0;\r\n\r\n    constructor(private el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        this.el.nativeElement.style.transform = `rotate(${this.rotate}deg)`;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./app/Directives/rotate.directive.ts","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { LocationService } from './../../Services/location.service';\r\nimport { WeatherService } from './../../Services/weather.service';\r\nimport { LoggerService } from './../../Services/logger.service';\r\n\r\nimport { City } from './../../Entities/city';\r\nimport { CityCoordinates } from './../../Entities/cityCoordinates';\r\nimport { StatusMessage } from './../../Enum/statusMessage';\r\n\r\n@Component({\r\n    selector: 'cities',\r\n    templateUrl: './app/Components/Cities/cities.component.html',\r\n    styleUrls: ['./app/Components/Cities/cities.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class CitiesComponent implements OnInit, OnDestroy {\r\n    private componentName: string = 'Cities component';\r\n    private cities: City[];\r\n    private centerCoord: CityCoordinates;\r\n    private firstLetter: string = '';\r\n    private timeRequest:Date;\r\n    private favoriteId: number = -1;\r\n    private timerRefreshId:NodeJS.Timer;\r\n    private isContinueRefresh:boolean = true;\r\n\r\n    constructor (\r\n        private locationService: LocationService,\r\n        private weatherService: WeatherService,\r\n        private loggerService: LoggerService,\r\n        private changeDetector: ChangeDetectorRef\r\n    ) {}\r\n\r\n    ngOnInit() { \r\n        this.locationService.getCenterCoord().subscribe(coord => {\r\n            this.centerCoord = coord;\r\n            this.loggerService.log(this.componentName, 'Get geo coordinates', StatusMessage.Info);\r\n            this.weatherService.getCitiesWeather(this.centerCoord).subscribe((cities) => {\r\n                this.cities = cities;\r\n                this.timeRequest = this.weatherService.timeLastRequest;\r\n                this.changeDetector.markForCheck();\r\n                this.loggerService.log(this.componentName, 'Get cities weather', StatusMessage.Info);\r\n\r\n                //4. Add real-time updates (every 5 sec) for weather via detectChanges() method\r\n                let self = this;\r\n                self.timerRefreshId = setTimeout(function tick() {\r\n                    self.weatherService.getCitiesWeatherByIds(self.cities).subscribe(cities => {\r\n                        if (self.isContinueRefresh) {\r\n                            cities.forEach(city => {\r\n                                let index = self.cities.findIndex(c => c.id === city.id);\r\n                                if (index > -1) {\r\n                                    self.cities[index] = Object.assign({}, city);\r\n                                }\r\n                            })\r\n                            self.timeRequest = self.weatherService.timeLastRequestIds;\r\n                            self.timerRefreshId = setTimeout(tick, 5000);\r\n                            self.changeDetector.markForCheck();\r\n                            self.loggerService.log(self.componentName, 'Refresh cities weather', StatusMessage.Info);\r\n                        }  \r\n                    })\r\n                }, 5000);\r\n            })\r\n        })\r\n    }\r\n\r\n    isNewLetter(letter: string): boolean {\r\n        let isDifferent: boolean = this.firstLetter !== letter;\r\n        this.firstLetter = letter;\r\n        return isDifferent;\r\n    }\r\n\r\n    onFavorite(isFavorite:boolean, index:number): void {\r\n        if (isFavorite) {\r\n            this.favoriteId = this.cities[index].id;\r\n            this.loggerService.log(this.componentName, `Set city ${ this.cities[index].name } as favorite`, StatusMessage.Info);\r\n        } else {\r\n            this.favoriteId = -1;\r\n            this.loggerService.log(this.componentName, `There is not favorite city`, StatusMessage.Info);\r\n        }\r\n    }\r\n\r\n    onRemove(name:string, index: number):void {\r\n        if (this.cities[index].id === this.favoriteId) {\r\n            this.favoriteId = -1;\r\n        }\r\n        this.cities.splice(index, 1);\r\n        this.loggerService.log(this.componentName, `Delete city ${ name }`, StatusMessage.Info);\r\n    }\r\n\r\n    addCity(name:string):void {\r\n        if (name) {\r\n            name = name.trim().toUpperCase();\r\n            this.weatherService.getCityWeatherByName(name, '').subscribe(city => {\r\n                let currentIndex = this.cities.findIndex(c => c.name === city.name);\r\n                if (currentIndex < 0) {\r\n                    currentIndex = this.cities.findIndex(c => c.name > city.name);\r\n                    if (currentIndex < 0) {\r\n                        this.cities.push(city);\r\n                    } else {\r\n                        this.cities.splice(currentIndex, 0, city);\r\n                    }\r\n                    this.changeDetector.markForCheck();\r\n                    this.loggerService.log(this.componentName, `Add city ${ city.name }`, StatusMessage.Info);\r\n                }\r\n            })            \r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        clearTimeout(this.timerRefreshId);\r\n        this.isContinueRefresh = false;\r\n        this.loggerService.log(this.componentName, `Destroy component`, StatusMessage.Info);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/Components/Cities/cities.component.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { LoggerService } from './logger.service';\r\n\r\nimport { CityCoordinates } from './../Entities/cityCoordinates';\r\nimport { StatusMessage } from './../Enum/statusMessage';\r\n\r\n@Injectable()\r\nexport class LocationService {\r\n    private serviceName = 'Location service';\r\n    private centerCoord: CityCoordinates;\r\n\r\n    constructor (private loggerService: LoggerService) {\r\n        this.centerCoord = null;\r\n    }\r\n\r\n    getCenterCoord(): Observable<CityCoordinates> {\r\n        return new Observable<CityCoordinates>(\r\n            observer => {\r\n                if (this.centerCoord == null) {\r\n                    navigator.geolocation.getCurrentPosition(position => {\r\n                        this.centerCoord = new CityCoordinates(position.coords.latitude, position.coords.longitude); \r\n                        observer.next(this.centerCoord);\r\n                        observer.complete();\r\n                        this.loggerService.log(this.serviceName, 'Get geo coordinates from navigator', StatusMessage.Success);\r\n                    })\r\n                } else {\r\n                    observer.next(this.centerCoord);\r\n                    observer.complete();\r\n                    this.loggerService.log(this.serviceName, 'Get geo coordinates from saved data', StatusMessage.Info);\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./app/Services/location.service.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { StatusMessage } from './../Enum/statusMessage';\r\n\r\n@Injectable()\r\nexport class LoggerService {\r\n\r\n    constructor () {\r\n    }\r\n\r\n    log(component: string, message: string, status: StatusMessage): void {\r\n        console.log(`%c ${ component }: ${ message}`, `color: ${ this.getColor(status) }`)\r\n    }\r\n\r\n    private getColor(status: StatusMessage): string {\r\n        switch (status) {\r\n            case StatusMessage.Info:\r\n                return 'blue';\r\n            case StatusMessage.Success:\r\n                return 'green';\r\n            case StatusMessage.Error:\r\n                return 'red';\r\n            default:\r\n                return 'black'\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./app/Services/logger.service.ts","export enum StatusMessage {\r\n    Info,\r\n    Success,\r\n    Error\r\n}\n\n\n// WEBPACK FOOTER //\n// ./app/Enum/statusMessage.ts","export class CityCoordinates {\r\n    lat: number;\r\n    lon: number;\r\n\r\n    constructor(latitude: number, longitude: number) {\r\n        this.lat = latitude\r\n        this.lon = longitude;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./app/Entities/cityCoordinates.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, URLSearchParams } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { LoggerService } from './logger.service';\r\n\r\nimport { CityCoordinates } from './../Entities/cityCoordinates';\r\nimport { CitiesInCycle } from './../Entities/citiesInCycle';\r\nimport { CitiesIds } from './../Entities/citiesIds';\r\nimport { City } from './../Entities/city';\r\nimport { StatusMessage } from './../Enum/statusMessage';\r\n\r\n@Injectable()\r\nexport class WeatherService {\r\n    private serviceName:string = 'Weather service';\r\n    private citiesInCycleUrl = 'http://api.openweathermap.org/data/2.5/find';\r\n    private citiesByIdsUrl = 'http://api.openweathermap.org/data/2.5/group';\r\n    private citiyWeatherByNameUrl = 'http://api.openweathermap.org/data/2.5/weather';\r\n    private countCities: number = 50;\r\n    private appid: string = 'f3dbe2c418d2f197d570d0224966b043';\r\n    private refreshDataTime: number = 10*60*1000;\r\n\r\n    private cities: City[];\r\n    private timeRequest: Date;\r\n    private timeRequestIds: Date;\r\n\r\n    constructor (\r\n        private http: Http,\r\n        private loggerService: LoggerService\r\n    ) {\r\n        this.cities = null;\r\n        this.timeRequest = null;\r\n        this.timeRequestIds = null;\r\n    }\r\n\r\n    get timeLastRequest(): Date {\r\n        return this.timeRequest;\r\n    }\r\n\r\n    get timeLastRequestIds(): Date {\r\n        return this.timeRequestIds;\r\n    }\r\n\r\n    getCitiesWeather(centerCoord: CityCoordinates): Observable<City[]> {\r\n        if (this.cities == null \r\n            || (new Date()).getTime() - this.timeRequest.getTime() > this.refreshDataTime\r\n        ) {\r\n            let params = new URLSearchParams();\r\n            params.set('lat', centerCoord.lat.toString());\r\n            params.set('lon', centerCoord.lon.toString());\r\n            params.set('cnt', this.countCities.toString());\r\n            params.set('appid', this.appid);\r\n\r\n            return this.http.get(this.citiesInCycleUrl, { search: params })\r\n                        .map((result) => {\r\n                            let citiesInCycle: CitiesInCycle = result.json();\r\n                            this.cities = citiesInCycle.list || [];\r\n                            this.cities.sort((city1, city2) => {\r\n                                return city1.name > city2.name ? 1 : (city1.name < city2.name ? -1 : 0);\r\n                            });\r\n                            this.timeRequest = new Date();\r\n                            this.timeRequestIds = this.timeRequest;\r\n                            this.loggerService.log(this.serviceName, 'Get cities weather from API', StatusMessage.Success);\r\n                            return this.cities;\r\n                        })\r\n                        .catch((error) => { this.loggerService.log(this.serviceName, 'Error when getting cities weather from API', StatusMessage.Error);});\r\n        } else {\r\n            return new Observable<City[]>(\r\n                observer => {\r\n                    observer.next(this.cities);\r\n                    observer.complete();\r\n                    this.loggerService.log(this.serviceName, 'Get cities weather from array', StatusMessage.Info);\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    getCitiesWeatherByIds(cities:City[]): Observable<City[]> {\r\n        if ((new Date()).getTime() - this.timeRequestIds.getTime() < this.refreshDataTime) {\r\n            return new Observable<City[]>(\r\n                observer => {\r\n                    observer.next(cities);\r\n                    observer.complete();\r\n                    this.loggerService.log(this.serviceName, `Get cities weather by ids from array`, StatusMessage.Info);\r\n                }\r\n            )\r\n        } \r\n        \r\n        let ids = cities.map(city => city.id);\r\n\r\n        let idsMaxCnt = 20,\r\n            index = 0,\r\n            params = new URLSearchParams(),\r\n            obsArr = [];\r\n\r\n        params.set('appid', this.appid);\r\n\r\n        while (ids.length > index*idsMaxCnt) {\r\n            params.set('id', ids.slice(index*idsMaxCnt, (index + 1) * idsMaxCnt).join(','));\r\n            obsArr.push(this.http.get(this.citiesByIdsUrl, { search: params })\r\n                        .map((result) => {\r\n                            let citiesIds: CitiesIds = result.json();\r\n                            this.loggerService.log(this.serviceName, `Get cities weather by ids from ${citiesIds.list[0].name} to ${citiesIds.list[citiesIds.cnt - 1].name} from API (inside map)`, StatusMessage.Success);\r\n                            return citiesIds.list || [];\r\n                        })\r\n                        .catch((error) => { this.loggerService.log(this.serviceName, 'Error when getting cities weather by ids from API (inside map)', StatusMessage.Error);})\r\n            );\r\n            index++;\r\n        }\r\n        \r\n        return Observable.onErrorResumeNext(obsArr) \r\n            .reduce((citiesAll, citiesNew) => {\r\n                citiesAll = citiesAll.concat(citiesNew);\r\n                this.timeRequestIds = new Date();\r\n                this.loggerService.log(this.serviceName, `Get cities weather by ids from ${citiesNew[0].name} to ${citiesNew[citiesNew.length - 1].name} from API (inside reduce)`, StatusMessage.Info);\r\n                return citiesAll;\r\n            }, [])\r\n    }\r\n\r\n    getCityWeatherByName(cityName: string, units:string = 'metric'): Observable<City> {\r\n        let params = new URLSearchParams();\r\n            params.set('q', cityName);\r\n            params.set('units', units);\r\n            params.set('appid', this.appid);\r\n\r\n        return this.http.get(this.citiyWeatherByNameUrl, { search: params })\r\n                        .map((result) => {\r\n                            let city: City = result.json();\r\n                            this.loggerService.log(this.serviceName, `Get ${ city.name } city weather from API`, StatusMessage.Success);\r\n                            return city;\r\n                        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./app/Services/weather.service.ts","import { NgModule }      from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CityModule } from './../City/city.module';\r\n\r\nimport { CitiesAsyncComponent } from './citiesAsync.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CityModule\r\n  ],\r\n  declarations: [\r\n    CitiesAsyncComponent,\r\n  ],\r\n  exports: [\r\n    CitiesAsyncComponent\r\n  ]\r\n})\r\n\r\nexport class CitiesAsyncModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/Components/CitiesAsync/citiesAsync.module.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { LocationService } from './../../Services/location.service';\r\nimport { WeatherService } from './../../Services/weather.service';\r\nimport { LoggerService } from './../../Services/logger.service';\r\n\r\nimport { City } from './../../Entities/city';\r\nimport { CityCoordinates } from './../../Entities/cityCoordinates';\r\nimport { StatusMessage } from './../../Enum/statusMessage';\r\n\r\n@Component({\r\n    selector: 'cities-async',\r\n    templateUrl: './app/Components/CitiesAsync/citiesAsync.component.html',\r\n    styleUrls: ['./app/Components/CitiesAsync/citiesAsync.component.css']\r\n})\r\n\r\nexport class CitiesAsyncComponent implements OnInit {\r\n    private componentName: string = 'CitiesAsync component';\r\n    private $cities: Observable<City[]>;\r\n    private centerCoord: CityCoordinates;\r\n    private firstLetter: string = '';\r\n    private timeRequest: Date;\r\n\r\n    constructor (\r\n        private locationService: LocationService,\r\n        private weatherService: WeatherService,\r\n        private loggerService: LoggerService\r\n    ) {}\r\n\r\n    ngOnInit() { \r\n        this.locationService.getCenterCoord().subscribe(coord => {\r\n            this.centerCoord = coord;\r\n            this.loggerService.log(this.componentName, `Get geo coordinates`, StatusMessage.Info);\r\n            this.$cities = this.weatherService.getCitiesWeather(this.centerCoord);\r\n            this.weatherService.getCitiesWeather(this.centerCoord).subscribe(() => {\r\n                this.timeRequest = this.weatherService.timeLastRequest; \r\n            })\r\n        })\r\n    }\r\n\r\n    isNewLetter(letter: string): boolean {\r\n        let isDifferent: boolean = this.firstLetter !== letter;\r\n        this.firstLetter = letter;\r\n        return isDifferent;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/Components/CitiesAsync/citiesAsync.component.ts","import { NgModule }      from '@angular/core';\r\n\r\nimport { AgmCoreModule } from 'angular2-google-maps/core';\r\n\r\nimport { MapComponent } from './map.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyDatH1l956GXlJ4vu1EfVfJSGoKni2-Lxk'\r\n    })\r\n  ],\r\n  declarations: [\r\n    MapComponent,\r\n  ],\r\n  exports: [ \r\n    MapComponent \r\n  ]\r\n})\r\n\r\nexport class MapModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/Components/Map/map.module.ts","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n// main modules\n__export(require('./directives'));\n__export(require('./services'));\n// Google Maps types\n// core module\n// we explicitly export the module here to prevent this Ionic 2 bug:\n// http://stevemichelotti.com/integrate-angular-2-google-maps-into-ionic-2/\nvar core_module_1 = require('./core-module');\nexports.AgmCoreModule = core_module_1.AgmCoreModule;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/index.js\n// module id = 374\n// module chunks = 0","\"use strict\";\nvar google_map_1 = require('./directives/google-map');\nexports.SebmGoogleMap = google_map_1.SebmGoogleMap;\nvar google_map_circle_1 = require('./directives/google-map-circle');\nexports.SebmGoogleMapCircle = google_map_circle_1.SebmGoogleMapCircle;\nvar google_map_info_window_1 = require('./directives/google-map-info-window');\nexports.SebmGoogleMapInfoWindow = google_map_info_window_1.SebmGoogleMapInfoWindow;\nvar google_map_marker_1 = require('./directives/google-map-marker');\nexports.SebmGoogleMapMarker = google_map_marker_1.SebmGoogleMapMarker;\nvar google_map_polygon_1 = require('./directives/google-map-polygon');\nexports.SebmGoogleMapPolygon = google_map_polygon_1.SebmGoogleMapPolygon;\nvar google_map_polyline_1 = require('./directives/google-map-polyline');\nexports.SebmGoogleMapPolyline = google_map_polyline_1.SebmGoogleMapPolyline;\nvar google_map_polyline_point_1 = require('./directives/google-map-polyline-point');\nexports.SebmGoogleMapPolylinePoint = google_map_polyline_point_1.SebmGoogleMapPolylinePoint;\n//# sourceMappingURL=directives.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/directives.js\n// module id = 375\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar google_maps_api_wrapper_1 = require('../services/google-maps-api-wrapper');\nvar circle_manager_1 = require('../services/managers/circle-manager');\nvar info_window_manager_1 = require('../services/managers/info-window-manager');\nvar marker_manager_1 = require('../services/managers/marker-manager');\nvar polygon_manager_1 = require('../services/managers/polygon-manager');\nvar polyline_manager_1 = require('../services/managers/polyline-manager');\n/**\n * SebMGoogleMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the CSS\n * class `sebm-google-map-container`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n * import { SebmGoogleMap } from 'angular2-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [SebmGoogleMap],\n *  styles: [`\n *    .sebm-google-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <sebm-google-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </sebm-google-map>\n *  `\n * })\n * ```\n */\nvar SebmGoogleMap = (function () {\n    function SebmGoogleMap(_elem, _mapsWrapper) {\n        this._elem = _elem;\n        this._mapsWrapper = _mapsWrapper;\n        /**\n         * The longitude that defines the center of the map.\n         */\n        this.longitude = 0;\n        /**\n         * The latitude that defines the center of the map.\n         */\n        this.latitude = 0;\n        /**\n         * The zoom level of the map. The default zoom level is 8.\n         */\n        this.zoom = 8;\n        /**\n         * Enables/disables if map is draggable.\n         */\n        this.draggable = true;\n        /**\n         * Enables/disables zoom and center on double click. Enabled by default.\n         */\n        this.disableDoubleClickZoom = false;\n        /**\n         * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n         * value cannot get updated.\n         */\n        this.disableDefaultUI = false;\n        /**\n         * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n         */\n        this.scrollwheel = true;\n        /**\n         * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n         * enabled by default.\n         */\n        this.keyboardShortcuts = true;\n        /**\n         * The enabled/disabled state of the Zoom control.\n         */\n        this.zoomControl = true;\n        /**\n         * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n         * modes, these styles will only apply to labels and geometry.\n         */\n        this.styles = [];\n        /**\n         * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n         * used to\n         * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n         */\n        this.usePanning = false;\n        /**\n         * The initial enabled/disabled state of the Street View Pegman control.\n         * This control is part of the default UI, and should be set to false when displaying a map type\n         * on which the Street View road overlay should not appear (e.g. a non-Earth map type).\n         */\n        this.streetViewControl = true;\n        /**\n         * Sets the viewport to contain the given bounds.\n         */\n        this.fitBounds = null;\n        /**\n         * The initial enabled/disabled state of the Scale control. This is disabled by default.\n         */\n        this.scaleControl = false;\n        /**\n         * The initial enabled/disabled state of the Map type control.\n         */\n        this.mapTypeControl = false;\n        this._observableSubscriptions = [];\n        /**\n         * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n         * marker or infoWindow).\n         */\n        this.mapClick = new core_1.EventEmitter();\n        /**\n         * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapRightClick = new core_1.EventEmitter();\n        /**\n         * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapDblClick = new core_1.EventEmitter();\n        /**\n         * This event emitter is fired when the map center changes.\n         */\n        this.centerChange = new core_1.EventEmitter();\n        /**\n         * This event is fired when the viewport bounds have changed.\n         */\n        this.boundsChange = new core_1.EventEmitter();\n        /**\n         * This event is fired when the map becomes idle after panning or zooming.\n         */\n        this.idle = new core_1.EventEmitter();\n        /**\n         * This event is fired when the zoom level has changed.\n         */\n        this.zoomChange = new core_1.EventEmitter();\n    }\n    /** @internal */\n    SebmGoogleMap.prototype.ngOnInit = function () {\n        // todo: this should be solved with a new component and a viewChild decorator\n        var container = this._elem.nativeElement.querySelector('.sebm-google-map-container-inner');\n        this._initMapInstance(container);\n    };\n    SebmGoogleMap.prototype._initMapInstance = function (el) {\n        this._mapsWrapper.createMap(el, {\n            center: { lat: this.latitude || 0, lng: this.longitude || 0 },\n            zoom: this.zoom,\n            disableDefaultUI: this.disableDefaultUI,\n            backgroundColor: this.backgroundColor,\n            draggable: this.draggable,\n            draggableCursor: this.draggableCursor,\n            draggingCursor: this.draggingCursor,\n            keyboardShortcuts: this.keyboardShortcuts,\n            zoomControl: this.zoomControl,\n            styles: this.styles,\n            streetViewControl: this.streetViewControl,\n            scaleControl: this.scaleControl,\n            mapTypeControl: this.mapTypeControl\n        });\n        // register event listeners\n        this._handleMapCenterChange();\n        this._handleMapZoomChange();\n        this._handleMapMouseEvents();\n        this._handleBoundsChange();\n        this._handleIdleEvent();\n    };\n    /** @internal */\n    SebmGoogleMap.prototype.ngOnDestroy = function () {\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    /* @internal */\n    SebmGoogleMap.prototype.ngOnChanges = function (changes) {\n        this._updateMapOptionsChanges(changes);\n        this._updatePosition(changes);\n    };\n    SebmGoogleMap.prototype._updateMapOptionsChanges = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return SebmGoogleMap._mapOptionsAttributes.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        this._mapsWrapper.setMapOptions(options);\n    };\n    /**\n     * Triggers a resize event on the google map instance.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n    SebmGoogleMap.prototype.triggerResize = function () {\n        var _this = this;\n        // Note: When we would trigger the resize event and show the map in the same turn (which is a\n        // common case for triggering a resize event), then the resize event would not\n        // work (to show the map), so we trigger the event in a timeout.\n        return new Promise(function (resolve) {\n            setTimeout(function () { return _this._mapsWrapper.triggerMapEvent('resize').then(function () { return resolve(); }); });\n        });\n    };\n    SebmGoogleMap.prototype._updatePosition = function (changes) {\n        if (changes['latitude'] == null && changes['longitude'] == null &&\n            changes['fitBounds'] == null) {\n            // no position update needed\n            return;\n        }\n        // we prefer fitBounds in changes\n        if (changes['fitBounds'] && this.fitBounds != null) {\n            this._fitBounds();\n            return;\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        var newCenter = {\n            lat: this.latitude,\n            lng: this.longitude,\n        };\n        if (this.usePanning) {\n            this._mapsWrapper.panTo(newCenter);\n        }\n        else {\n            this._mapsWrapper.setCenter(newCenter);\n        }\n    };\n    SebmGoogleMap.prototype._fitBounds = function () {\n        if (this.usePanning) {\n            this._mapsWrapper.panToBounds(this.fitBounds);\n            return;\n        }\n        this._mapsWrapper.fitBounds(this.fitBounds);\n    };\n    SebmGoogleMap.prototype._handleMapCenterChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(function () {\n            _this._mapsWrapper.getCenter().then(function (center) {\n                _this.latitude = center.lat();\n                _this.longitude = center.lng();\n                _this.centerChange.emit({ lat: _this.latitude, lng: _this.longitude });\n            });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    SebmGoogleMap.prototype._handleBoundsChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(function () {\n            _this._mapsWrapper.getBounds().then(function (bounds) { _this.boundsChange.emit(bounds); });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    SebmGoogleMap.prototype._handleMapZoomChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(function () {\n            _this._mapsWrapper.getZoom().then(function (z) {\n                _this.zoom = z;\n                _this.zoomChange.emit(z);\n            });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    SebmGoogleMap.prototype._handleIdleEvent = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(function () { _this.idle.emit(void 0); });\n        this._observableSubscriptions.push(s);\n    };\n    SebmGoogleMap.prototype._handleMapMouseEvents = function () {\n        var _this = this;\n        var events = [\n            { name: 'click', emitter: this.mapClick },\n            { name: 'rightclick', emitter: this.mapRightClick },\n        ];\n        events.forEach(function (e) {\n            var s = _this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(function (event) {\n                var value = { coords: { lat: event.latLng.lat(), lng: event.latLng.lng() } };\n                e.emitter.emit(value);\n            });\n            _this._observableSubscriptions.push(s);\n        });\n    };\n    /**\n     * Map option attributes that can change over time\n     */\n    SebmGoogleMap._mapOptionsAttributes = [\n        'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n        'keyboardShortcuts', 'zoomControl', 'styles', 'streetViewControl', 'zoom', 'mapTypeControl'\n    ];\n    SebmGoogleMap.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'sebm-google-map',\n                    providers: [\n                        google_maps_api_wrapper_1.GoogleMapsAPIWrapper, marker_manager_1.MarkerManager, info_window_manager_1.InfoWindowManager, circle_manager_1.CircleManager, polyline_manager_1.PolylineManager,\n                        polygon_manager_1.PolygonManager\n                    ],\n                    inputs: [\n                        'longitude', 'latitude', 'zoom', 'draggable: mapDraggable', 'disableDoubleClickZoom',\n                        'disableDefaultUI', 'scrollwheel', 'backgroundColor', 'draggableCursor', 'draggingCursor',\n                        'keyboardShortcuts', 'zoomControl', 'styles', 'usePanning', 'streetViewControl', 'fitBounds',\n                        'scaleControl', 'mapTypeControl'\n                    ],\n                    outputs: [\n                        'mapClick', 'mapRightClick', 'mapDblClick', 'centerChange', 'idle', 'boundsChange', 'zoomChange'\n                    ],\n                    host: { '[class.sebm-google-map-container]': 'true' },\n                    styles: [\"\\n    .sebm-google-map-container-inner {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .sebm-google-map-content {\\n      display:none;\\n    }\\n  \"],\n                    template: \"\\n    <div class='sebm-google-map-container-inner'></div>\\n    <div class='sebm-google-map-content'>\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    SebmGoogleMap.ctorParameters = [\n        { type: core_1.ElementRef, },\n        { type: google_maps_api_wrapper_1.GoogleMapsAPIWrapper, },\n    ];\n    return SebmGoogleMap;\n}());\nexports.SebmGoogleMap = SebmGoogleMap;\n//# sourceMappingURL=google-map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/directives/google-map.js\n// module id = 376\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar Observable_1 = require('rxjs/Observable');\nvar maps_api_loader_1 = require('./maps-api-loader/maps-api-loader');\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nvar GoogleMapsAPIWrapper = (function () {\n    function GoogleMapsAPIWrapper(_loader, _zone) {\n        var _this = this;\n        this._loader = _loader;\n        this._zone = _zone;\n        this._map =\n            new Promise(function (resolve) { _this._mapResolver = resolve; });\n    }\n    GoogleMapsAPIWrapper.prototype.createMap = function (el, mapOptions) {\n        var _this = this;\n        return this._loader.load().then(function () {\n            var map = new google.maps.Map(el, mapOptions);\n            _this._mapResolver(map);\n            return;\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.setMapOptions = function (options) {\n        this._map.then(function (m) { m.setOptions(options); });\n    };\n    /**\n     * Creates a google map marker with the map context\n     */\n    GoogleMapsAPIWrapper.prototype.createMarker = function (options) {\n        if (options === void 0) { options = {}; }\n        return this._map.then(function (map) {\n            options.map = map;\n            return new google.maps.Marker(options);\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createInfoWindow = function (options) {\n        return this._map.then(function () { return new google.maps.InfoWindow(options); });\n    };\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n    GoogleMapsAPIWrapper.prototype.createCircle = function (options) {\n        return this._map.then(function (map) {\n            options.map = map;\n            return new google.maps.Circle(options);\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createPolyline = function (options) {\n        return this.getNativeMap().then(function (map) {\n            var line = new google.maps.Polyline(options);\n            line.setMap(map);\n            return line;\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createPolygon = function (options) {\n        return this.getNativeMap().then(function (map) {\n            var polygon = new google.maps.Polygon(options);\n            polygon.setMap(map);\n            return polygon;\n        });\n    };\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n    GoogleMapsAPIWrapper.prototype.containsLocation = function (latLng, polygon) {\n        return google.maps.geometry.poly.containsLocation(latLng, polygon);\n    };\n    GoogleMapsAPIWrapper.prototype.subscribeToMapEvent = function (eventName) {\n        var _this = this;\n        return Observable_1.Observable.create(function (observer) {\n            _this._map.then(function (m) {\n                m.addListener(eventName, function (arg) { _this._zone.run(function () { return observer.next(arg); }); });\n            });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.setCenter = function (latLng) {\n        return this._map.then(function (map) { return map.setCenter(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.getZoom = function () { return this._map.then(function (map) { return map.getZoom(); }); };\n    GoogleMapsAPIWrapper.prototype.getBounds = function () {\n        return this._map.then(function (map) { return map.getBounds(); });\n    };\n    GoogleMapsAPIWrapper.prototype.setZoom = function (zoom) {\n        return this._map.then(function (map) { return map.setZoom(zoom); });\n    };\n    GoogleMapsAPIWrapper.prototype.getCenter = function () {\n        return this._map.then(function (map) { return map.getCenter(); });\n    };\n    GoogleMapsAPIWrapper.prototype.panTo = function (latLng) {\n        return this._map.then(function (map) { return map.panTo(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.fitBounds = function (latLng) {\n        return this._map.then(function (map) { return map.fitBounds(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.panToBounds = function (latLng) {\n        return this._map.then(function (map) { return map.panToBounds(latLng); });\n    };\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n    GoogleMapsAPIWrapper.prototype.getNativeMap = function () { return this._map; };\n    /**\n     * Triggers the given event name on the map instance.\n     */\n    GoogleMapsAPIWrapper.prototype.triggerMapEvent = function (eventName) {\n        return this._map.then(function (m) { return google.maps.event.trigger(m, eventName); });\n    };\n    GoogleMapsAPIWrapper.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    GoogleMapsAPIWrapper.ctorParameters = [\n        { type: maps_api_loader_1.MapsAPILoader, },\n        { type: core_1.NgZone, },\n    ];\n    return GoogleMapsAPIWrapper;\n}());\nexports.GoogleMapsAPIWrapper = GoogleMapsAPIWrapper;\n//# sourceMappingURL=google-maps-api-wrapper.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/services/google-maps-api-wrapper.js\n// module id = 377\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar MapsAPILoader = (function () {\n    function MapsAPILoader() {\n    }\n    MapsAPILoader.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    MapsAPILoader.ctorParameters = [];\n    return MapsAPILoader;\n}());\nexports.MapsAPILoader = MapsAPILoader;\n//# sourceMappingURL=maps-api-loader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/services/maps-api-loader/maps-api-loader.js\n// module id = 378\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar Observable_1 = require('rxjs/Observable');\nvar google_maps_api_wrapper_1 = require('../google-maps-api-wrapper');\nvar CircleManager = (function () {\n    function CircleManager(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._circles = new Map();\n    }\n    CircleManager.prototype.addCircle = function (circle) {\n        this._circles.set(circle, this._apiWrapper.createCircle({\n            center: { lat: circle.latitude, lng: circle.longitude },\n            clickable: circle.clickable,\n            draggable: circle.draggable,\n            editable: circle.editable,\n            fillColor: circle.fillColor,\n            fillOpacity: circle.fillOpacity,\n            radius: circle.radius,\n            strokeColor: circle.strokeColor,\n            strokeOpacity: circle.strokeOpacity,\n            strokePosition: circle.strokePosition,\n            strokeWeight: circle.strokeWeight,\n            visible: circle.visible,\n            zIndex: circle.zIndex\n        }));\n    };\n    ;\n    /**\n     * Removes the given circle from the map.\n     */\n    CircleManager.prototype.removeCircle = function (circle) {\n        var _this = this;\n        return this._circles.get(circle).then(function (c) {\n            c.setMap(null);\n            _this._circles.delete(circle);\n        });\n    };\n    CircleManager.prototype.setOptions = function (circle, options) {\n        return this._circles.get(circle).then(function (c) { return c.setOptions(options); });\n    };\n    ;\n    CircleManager.prototype.getBounds = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getBounds(); });\n    };\n    ;\n    CircleManager.prototype.getCenter = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getCenter(); });\n    };\n    ;\n    CircleManager.prototype.getRadius = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getRadius(); });\n    };\n    CircleManager.prototype.setCenter = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setCenter({ lat: circle.latitude, lng: circle.longitude }); });\n    };\n    ;\n    CircleManager.prototype.setEditable = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setEditable(circle.editable); });\n    };\n    ;\n    CircleManager.prototype.setDraggable = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setDraggable(circle.draggable); });\n    };\n    ;\n    CircleManager.prototype.setVisible = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setVisible(circle.visible); });\n    };\n    ;\n    CircleManager.prototype.setRadius = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setRadius(circle.radius); });\n    };\n    ;\n    CircleManager.prototype.createEventObservable = function (eventName, circle) {\n        var _this = this;\n        return Observable_1.Observable.create(function (observer) {\n            var listener = null;\n            _this._circles.get(circle).then(function (c) {\n                listener = c.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n            return function () {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    };\n    CircleManager.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    CircleManager.ctorParameters = [\n        { type: google_maps_api_wrapper_1.GoogleMapsAPIWrapper, },\n        { type: core_1.NgZone, },\n    ];\n    return CircleManager;\n}());\nexports.CircleManager = CircleManager;\n//# sourceMappingURL=circle-manager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/services/managers/circle-manager.js\n// module id = 379\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar google_maps_api_wrapper_1 = require('../google-maps-api-wrapper');\nvar marker_manager_1 = require('./marker-manager');\nvar InfoWindowManager = (function () {\n    function InfoWindowManager(_mapsWrapper, _zone, _markerManager) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markerManager = _markerManager;\n        this._infoWindows = new Map();\n    }\n    InfoWindowManager.prototype.deleteInfoWindow = function (infoWindow) {\n        var _this = this;\n        var iWindow = this._infoWindows.get(infoWindow);\n        if (iWindow == null) {\n            // info window already deleted\n            return Promise.resolve();\n        }\n        return iWindow.then(function (i) {\n            return _this._zone.run(function () {\n                i.close();\n                _this._infoWindows.delete(infoWindow);\n            });\n        });\n    };\n    InfoWindowManager.prototype.setPosition = function (infoWindow) {\n        return this._infoWindows.get(infoWindow).then(function (i) { return i.setPosition({\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude\n        }); });\n    };\n    InfoWindowManager.prototype.setZIndex = function (infoWindow) {\n        return this._infoWindows.get(infoWindow)\n            .then(function (i) { return i.setZIndex(infoWindow.zIndex); });\n    };\n    InfoWindowManager.prototype.open = function (infoWindow) {\n        var _this = this;\n        return this._infoWindows.get(infoWindow).then(function (w) {\n            if (infoWindow.hostMarker != null) {\n                return _this._markerManager.getNativeMarker(infoWindow.hostMarker).then(function (marker) {\n                    return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map, marker); });\n                });\n            }\n            return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map); });\n        });\n    };\n    InfoWindowManager.prototype.close = function (infoWindow) {\n        return this._infoWindows.get(infoWindow).then(function (w) { return w.close(); });\n    };\n    InfoWindowManager.prototype.setOptions = function (infoWindow, options) {\n        return this._infoWindows.get(infoWindow).then(function (i) { return i.setOptions(options); });\n    };\n    InfoWindowManager.prototype.addInfoWindow = function (infoWindow) {\n        var options = {\n            content: infoWindow.content,\n            maxWidth: infoWindow.maxWidth,\n            zIndex: infoWindow.zIndex,\n        };\n        if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n            options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n        }\n        var infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n        this._infoWindows.set(infoWindow, infoWindowPromise);\n    };\n    InfoWindowManager.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    InfoWindowManager.ctorParameters = [\n        { type: google_maps_api_wrapper_1.GoogleMapsAPIWrapper, },\n        { type: core_1.NgZone, },\n        { type: marker_manager_1.MarkerManager, },\n    ];\n    return InfoWindowManager;\n}());\nexports.InfoWindowManager = InfoWindowManager;\n//# sourceMappingURL=info-window-manager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/services/managers/info-window-manager.js\n// module id = 380\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar Observable_1 = require('rxjs/Observable');\nvar google_maps_api_wrapper_1 = require('./../google-maps-api-wrapper');\nvar MarkerManager = (function () {\n    function MarkerManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markers = new Map();\n    }\n    MarkerManager.prototype.deleteMarker = function (marker) {\n        var _this = this;\n        var m = this._markers.get(marker);\n        if (m == null) {\n            // marker already deleted\n            return Promise.resolve();\n        }\n        return m.then(function (m) {\n            return _this._zone.run(function () {\n                m.setMap(null);\n                _this._markers.delete(marker);\n            });\n        });\n    };\n    MarkerManager.prototype.updateMarkerPosition = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setPosition({ lat: marker.latitude, lng: marker.longitude }); });\n    };\n    MarkerManager.prototype.updateTitle = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setTitle(marker.title); });\n    };\n    MarkerManager.prototype.updateLabel = function (marker) {\n        return this._markers.get(marker).then(function (m) { m.setLabel(marker.label); });\n    };\n    MarkerManager.prototype.updateDraggable = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setDraggable(marker.draggable); });\n    };\n    MarkerManager.prototype.updateIcon = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setIcon(marker.iconUrl); });\n    };\n    MarkerManager.prototype.updateOpacity = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setOpacity(marker.opacity); });\n    };\n    MarkerManager.prototype.updateVisible = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setVisible(marker.visible); });\n    };\n    MarkerManager.prototype.updateZIndex = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setZIndex(marker.zIndex); });\n    };\n    MarkerManager.prototype.addMarker = function (marker) {\n        var markerPromise = this._mapsWrapper.createMarker({\n            position: { lat: marker.latitude, lng: marker.longitude },\n            label: marker.label,\n            draggable: marker.draggable,\n            icon: marker.iconUrl,\n            opacity: marker.opacity,\n            visible: marker.visible,\n            zIndex: marker.zIndex,\n            title: marker.title\n        });\n        this._markers.set(marker, markerPromise);\n    };\n    MarkerManager.prototype.getNativeMarker = function (marker) {\n        return this._markers.get(marker);\n    };\n    MarkerManager.prototype.createEventObservable = function (eventName, marker) {\n        var _this = this;\n        return Observable_1.Observable.create(function (observer) {\n            _this._markers.get(marker).then(function (m) {\n                m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    MarkerManager.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    MarkerManager.ctorParameters = [\n        { type: google_maps_api_wrapper_1.GoogleMapsAPIWrapper, },\n        { type: core_1.NgZone, },\n    ];\n    return MarkerManager;\n}());\nexports.MarkerManager = MarkerManager;\n//# sourceMappingURL=marker-manager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/services/managers/marker-manager.js\n// module id = 381\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar Observable_1 = require('rxjs/Observable');\nvar google_maps_api_wrapper_1 = require('../google-maps-api-wrapper');\nvar PolygonManager = (function () {\n    function PolygonManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polygons = new Map();\n    }\n    PolygonManager.prototype.addPolygon = function (path) {\n        var polygonPromise = this._mapsWrapper.createPolygon({\n            clickable: path.clickable,\n            draggable: path.draggable,\n            editable: path.editable,\n            fillColor: path.fillColor,\n            fillOpacity: path.fillOpacity,\n            geodesic: path.geodesic,\n            paths: path.paths,\n            strokeColor: path.strokeColor,\n            strokeOpacity: path.strokeOpacity,\n            strokeWeight: path.strokeWeight,\n            visible: path.visible,\n            zIndex: path.zIndex,\n        });\n        this._polygons.set(path, polygonPromise);\n    };\n    PolygonManager.prototype.updatePolygon = function (polygon) {\n        var _this = this;\n        var m = this._polygons.get(polygon);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) { return _this._zone.run(function () { l.setPaths(polygon.paths); }); });\n    };\n    PolygonManager.prototype.setPolygonOptions = function (path, options) {\n        return this._polygons.get(path).then(function (l) { l.setOptions(options); });\n    };\n    PolygonManager.prototype.deletePolygon = function (paths) {\n        var _this = this;\n        var m = this._polygons.get(paths);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) {\n            return _this._zone.run(function () {\n                l.setMap(null);\n                _this._polygons.delete(paths);\n            });\n        });\n    };\n    PolygonManager.prototype.createEventObservable = function (eventName, path) {\n        var _this = this;\n        return Observable_1.Observable.create(function (observer) {\n            _this._polygons.get(path).then(function (l) {\n                l.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    PolygonManager.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    PolygonManager.ctorParameters = [\n        { type: google_maps_api_wrapper_1.GoogleMapsAPIWrapper, },\n        { type: core_1.NgZone, },\n    ];\n    return PolygonManager;\n}());\nexports.PolygonManager = PolygonManager;\n//# sourceMappingURL=polygon-manager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/services/managers/polygon-manager.js\n// module id = 382\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar Observable_1 = require('rxjs/Observable');\nvar google_maps_api_wrapper_1 = require('../google-maps-api-wrapper');\nvar PolylineManager = (function () {\n    function PolylineManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polylines = new Map();\n    }\n    PolylineManager._convertPoints = function (line) {\n        var path = line._getPoints().map(function (point) {\n            return { lat: point.latitude, lng: point.longitude };\n        });\n        return path;\n    };\n    PolylineManager.prototype.addPolyline = function (line) {\n        var path = PolylineManager._convertPoints(line);\n        var polylinePromise = this._mapsWrapper.createPolyline({\n            clickable: line.clickable,\n            draggable: line.draggable,\n            editable: line.editable,\n            geodesic: line.geodesic,\n            strokeColor: line.strokeColor,\n            strokeOpacity: line.strokeOpacity,\n            strokeWeight: line.strokeWeight,\n            visible: line.visible,\n            zIndex: line.zIndex,\n            path: path\n        });\n        this._polylines.set(line, polylinePromise);\n    };\n    PolylineManager.prototype.updatePolylinePoints = function (line) {\n        var _this = this;\n        var path = PolylineManager._convertPoints(line);\n        var m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) { return _this._zone.run(function () { l.setPath(path); }); });\n    };\n    PolylineManager.prototype.setPolylineOptions = function (line, options) {\n        return this._polylines.get(line).then(function (l) { l.setOptions(options); });\n    };\n    PolylineManager.prototype.deletePolyline = function (line) {\n        var _this = this;\n        var m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) {\n            return _this._zone.run(function () {\n                l.setMap(null);\n                _this._polylines.delete(line);\n            });\n        });\n    };\n    PolylineManager.prototype.createEventObservable = function (eventName, line) {\n        var _this = this;\n        return Observable_1.Observable.create(function (observer) {\n            _this._polylines.get(line).then(function (l) {\n                l.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    PolylineManager.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    PolylineManager.ctorParameters = [\n        { type: google_maps_api_wrapper_1.GoogleMapsAPIWrapper, },\n        { type: core_1.NgZone, },\n    ];\n    return PolylineManager;\n}());\nexports.PolylineManager = PolylineManager;\n//# sourceMappingURL=polyline-manager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/services/managers/polyline-manager.js\n// module id = 383\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar circle_manager_1 = require('../services/managers/circle-manager');\nvar SebmGoogleMapCircle = (function () {\n    function SebmGoogleMapCircle(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Circle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this circle over the map. Defaults to false.\n         */\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this circle by dragging the control points shown at\n         * the center and around the circumference of the circle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The radius in meters on the Earth's surface.\n         */\n        this.radius = 0;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this circle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the circle's center is changed.\n         */\n        this.centerChange = new core_1.EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleClick = new core_1.EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleDblClick = new core_1.EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the circle.\n         */\n        this.drag = new core_1.EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the circle.\n         */\n        this.dragEnd = new core_1.EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the circle.\n         */\n        this.dragStart = new core_1.EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the circle.\n         */\n        this.mouseDown = new core_1.EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the circle.\n         */\n        this.mouseMove = new core_1.EventEmitter();\n        /**\n         * This event is fired on circle mouseout.\n         */\n        this.mouseOut = new core_1.EventEmitter();\n        /**\n         * This event is fired on circle mouseover.\n         */\n        this.mouseOver = new core_1.EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the circle.\n         */\n        this.mouseUp = new core_1.EventEmitter();\n        /**\n         * This event is fired when the circle's radius is changed.\n         */\n        this.radiusChange = new core_1.EventEmitter();\n        /**\n         * This event is fired when the circle is right-clicked on.\n         */\n        this.rightClick = new core_1.EventEmitter();\n        this._circleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    SebmGoogleMapCircle.prototype.ngOnInit = function () {\n        this._manager.addCircle(this);\n        this._circleAddedToManager = true;\n        this._registerEventListeners();\n    };\n    /** @internal */\n    SebmGoogleMapCircle.prototype.ngOnChanges = function (changes) {\n        if (!this._circleAddedToManager) {\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._manager.setCenter(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        if (changes['radius']) {\n            this._manager.setRadius(this);\n        }\n        this._updateCircleOptionsChanges(changes);\n    };\n    SebmGoogleMapCircle.prototype._updateCircleOptionsChanges = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return SebmGoogleMapCircle._mapOptions.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    };\n    SebmGoogleMapCircle.prototype._registerEventListeners = function () {\n        var _this = this;\n        var events = new Map();\n        events.set('center_changed', this.centerChange);\n        events.set('click', this.circleClick);\n        events.set('dblclick', this.circleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragStart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('radius_changed', this.radiusChange);\n        events.set('rightclick', this.rightClick);\n        events.forEach(function (eventEmitter, eventName) {\n            _this._eventSubscriptions.push(_this._manager.createEventObservable(eventName, _this).subscribe(function (value) {\n                switch (eventName) {\n                    case 'radius_changed':\n                        _this._manager.getRadius(_this).then(function (radius) { return eventEmitter.emit(radius); });\n                        break;\n                    case 'center_changed':\n                        _this._manager.getCenter(_this).then(function (center) {\n                            return eventEmitter.emit({ lat: center.lat(), lng: center.lng() });\n                        });\n                        break;\n                    default:\n                        eventEmitter.emit({ coords: { lat: value.latLng.lat(), lng: value.latLng.lng() } });\n                }\n            }));\n        });\n    };\n    /** @internal */\n    SebmGoogleMapCircle.prototype.ngOnDestroy = function () {\n        this._eventSubscriptions.forEach(function (s) { s.unsubscribe(); });\n        this._eventSubscriptions = null;\n        this._manager.removeCircle(this);\n    };\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n    SebmGoogleMapCircle.prototype.getBounds = function () { return this._manager.getBounds(this); };\n    SebmGoogleMapCircle.prototype.getCenter = function () { return this._manager.getCenter(this); };\n    SebmGoogleMapCircle._mapOptions = [\n        'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n        'visible', 'zIndex'\n    ];\n    SebmGoogleMapCircle.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'sebm-google-map-circle',\n                    inputs: [\n                        'latitude', 'longitude', 'clickable', 'draggable: circleDraggable', 'editable', 'fillColor',\n                        'fillOpacity', 'radius', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n                        'visible', 'zIndex'\n                    ],\n                    outputs: [\n                        'centerChange', 'circleClick', 'circleDblClick', 'drag', 'dragEnd', 'dragStart', 'mouseDown',\n                        'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'radiusChange', 'rightClick'\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    SebmGoogleMapCircle.ctorParameters = [\n        { type: circle_manager_1.CircleManager, },\n    ];\n    return SebmGoogleMapCircle;\n}());\nexports.SebmGoogleMapCircle = SebmGoogleMapCircle;\n//# sourceMappingURL=google-map-circle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/directives/google-map-circle.js\n// module id = 384\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar info_window_manager_1 = require('../services/managers/info-window-manager');\nvar infoWindowId = 0;\n/**\n * SebmGoogleMapInfoWindow renders a info window inside a {@link SebmGoogleMapMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { SebmGoogleMap, SebmGoogleMapMarker, SebmGoogleMapInfoWindow } from\n * 'angular2-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [SebmGoogleMap, SebmGoogleMapMarker, SebmGoogleMapInfoWindow],\n *  styles: [`\n *    .sebm-google-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <sebm-google-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <sebm-google-map-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <sebm-google-map-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </sebm-google-map-info-window>\n *      </sebm-google-map-marker>\n *    </sebm-google-map>\n *  `\n * })\n * ```\n */\nvar SebmGoogleMapInfoWindow = (function () {\n    function SebmGoogleMapInfoWindow(_infoWindowManager, _el) {\n        this._infoWindowManager = _infoWindowManager;\n        this._el = _el;\n        /**\n         * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n         */\n        this.isOpen = false;\n        /**\n         * Emits an event when the info window is closed.\n         */\n        this.infoWindowClose = new core_1.EventEmitter();\n        this._infoWindowAddedToManager = false;\n        this._id = (infoWindowId++).toString();\n    }\n    SebmGoogleMapInfoWindow.prototype.ngOnInit = function () {\n        this.content = this._el.nativeElement.querySelector('.sebm-google-map-info-window-content');\n        this._infoWindowManager.addInfoWindow(this);\n        this._infoWindowAddedToManager = true;\n        this._updateOpenState();\n    };\n    /** @internal */\n    SebmGoogleMapInfoWindow.prototype.ngOnChanges = function (changes) {\n        if (!this._infoWindowAddedToManager) {\n            return;\n        }\n        if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n            typeof this.longitude === 'number') {\n            this._infoWindowManager.setPosition(this);\n        }\n        if (changes['zIndex']) {\n            this._infoWindowManager.setZIndex(this);\n        }\n        if (changes['isOpen']) {\n            this._updateOpenState();\n        }\n        this._setInfoWindowOptions(changes);\n    };\n    SebmGoogleMapInfoWindow.prototype._updateOpenState = function () {\n        this.isOpen ? this._infoWindowManager.open(this) : this._infoWindowManager.close(this);\n    };\n    SebmGoogleMapInfoWindow.prototype._setInfoWindowOptions = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return SebmGoogleMapInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        this._infoWindowManager.setOptions(this, options);\n    };\n    /**\n     * Opens the info window.\n     */\n    SebmGoogleMapInfoWindow.prototype.open = function () { return this._infoWindowManager.open(this); };\n    /**\n     * Closes the info window.\n     */\n    SebmGoogleMapInfoWindow.prototype.close = function () {\n        var _this = this;\n        return this._infoWindowManager.close(this).then(function () { _this.infoWindowClose.emit(void 0); });\n    };\n    /** @internal */\n    SebmGoogleMapInfoWindow.prototype.id = function () { return this._id; };\n    /** @internal */\n    SebmGoogleMapInfoWindow.prototype.toString = function () { return 'SebmGoogleMapInfoWindow-' + this._id.toString(); };\n    /** @internal */\n    SebmGoogleMapInfoWindow.prototype.ngOnDestroy = function () { this._infoWindowManager.deleteInfoWindow(this); };\n    SebmGoogleMapInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\n    SebmGoogleMapInfoWindow.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'sebm-google-map-info-window',\n                    inputs: ['latitude', 'longitude', 'disableAutoPan', 'isOpen', 'zIndex', 'maxWidth'],\n                    outputs: ['infoWindowClose'],\n                    template: \"<div class='sebm-google-map-info-window-content'>\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    SebmGoogleMapInfoWindow.ctorParameters = [\n        { type: info_window_manager_1.InfoWindowManager, },\n        { type: core_1.ElementRef, },\n    ];\n    return SebmGoogleMapInfoWindow;\n}());\nexports.SebmGoogleMapInfoWindow = SebmGoogleMapInfoWindow;\n//# sourceMappingURL=google-map-info-window.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/directives/google-map-info-window.js\n// module id = 385\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar marker_manager_1 = require('../services/managers/marker-manager');\nvar google_map_info_window_1 = require('./google-map-info-window');\nvar markerId = 0;\n/**\n * SebmGoogleMapMarker renders a map marker inside a {@link SebmGoogleMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { SebmGoogleMap, SebmGoogleMapMarker } from 'angular2-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [SebmGoogleMap, SebmGoogleMapMarker],\n *  styles: [`\n *    .sebm-google-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <sebm-google-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <sebm-google-map-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </sebm-google-map-marker>\n *    </sebm-google-map>\n *  `\n * })\n * ```\n */\nvar SebmGoogleMapMarker = (function () {\n    function SebmGoogleMapMarker(_markerManager) {\n        this._markerManager = _markerManager;\n        /**\n         * If true, the marker can be dragged. Default value is false.\n         */\n        this.draggable = false;\n        /**\n         * If true, the marker is visible\n         */\n        this.visible = true;\n        /**\n         * Whether to automatically open the child info window when the marker is clicked.\n         */\n        this.openInfoWindow = true;\n        /**\n         * The marker's opacity between 0.0 and 1.0.\n         */\n        this.opacity = 1;\n        /**\n         * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n         * front of markers with lower values. By default, markers are displayed according to their\n         * vertical position on screen, with lower markers appearing in front of markers further up the\n         * screen.\n         */\n        this.zIndex = 1;\n        /**\n         * This event emitter gets emitted when the user clicks on the marker.\n         */\n        this.markerClick = new core_1.EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the marker.\n         */\n        this.dragEnd = new core_1.EventEmitter();\n        /**\n         * This event is fired when the user mouses over the marker.\n         */\n        this.mouseOver = new core_1.EventEmitter();\n        /**\n         * This event is fired when the user mouses outside the marker.\n         */\n        this.mouseOut = new core_1.EventEmitter();\n        this._markerAddedToManger = false;\n        this._observableSubscriptions = [];\n        this._id = (markerId++).toString();\n    }\n    /* @internal */\n    SebmGoogleMapMarker.prototype.ngAfterContentInit = function () {\n        if (this.infoWindow != null) {\n            this.infoWindow.hostMarker = this;\n        }\n    };\n    /** @internal */\n    SebmGoogleMapMarker.prototype.ngOnChanges = function (changes) {\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        if (!this._markerAddedToManger) {\n            this._markerManager.addMarker(this);\n            this._markerAddedToManger = true;\n            this._addEventListeners();\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._markerManager.updateMarkerPosition(this);\n        }\n        if (changes['title']) {\n            this._markerManager.updateTitle(this);\n        }\n        if (changes['label']) {\n            this._markerManager.updateLabel(this);\n        }\n        if (changes['draggable']) {\n            this._markerManager.updateDraggable(this);\n        }\n        if (changes['iconUrl']) {\n            this._markerManager.updateIcon(this);\n        }\n        if (changes['opacity']) {\n            this._markerManager.updateOpacity(this);\n        }\n        if (changes['visible']) {\n            this._markerManager.updateVisible(this);\n        }\n        if (changes['zIndex']) {\n            this._markerManager.updateZIndex(this);\n        }\n    };\n    SebmGoogleMapMarker.prototype._addEventListeners = function () {\n        var _this = this;\n        var cs = this._markerManager.createEventObservable('click', this).subscribe(function () {\n            if (_this.openInfoWindow && _this.infoWindow != null) {\n                _this.infoWindow.open();\n            }\n            _this.markerClick.emit(null);\n        });\n        this._observableSubscriptions.push(cs);\n        var ds = this._markerManager.createEventObservable('dragend', this)\n            .subscribe(function (e) {\n            _this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(ds);\n        var mover = this._markerManager.createEventObservable('mouseover', this)\n            .subscribe(function (e) {\n            _this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mover);\n        var mout = this._markerManager.createEventObservable('mouseout', this)\n            .subscribe(function (e) {\n            _this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mout);\n    };\n    /** @internal */\n    SebmGoogleMapMarker.prototype.id = function () { return this._id; };\n    /** @internal */\n    SebmGoogleMapMarker.prototype.toString = function () { return 'SebmGoogleMapMarker-' + this._id.toString(); };\n    /** @internal */\n    SebmGoogleMapMarker.prototype.ngOnDestroy = function () {\n        this._markerManager.deleteMarker(this);\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    SebmGoogleMapMarker.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'sebm-google-map-marker',\n                    inputs: [\n                        'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\n                        'openInfoWindow', 'opacity', 'visible', 'zIndex'\n                    ],\n                    outputs: ['markerClick', 'dragEnd', 'mouseOver', 'mouseOut']\n                },] },\n    ];\n    /** @nocollapse */\n    SebmGoogleMapMarker.ctorParameters = [\n        { type: marker_manager_1.MarkerManager, },\n    ];\n    SebmGoogleMapMarker.propDecorators = {\n        'infoWindow': [{ type: core_1.ContentChild, args: [google_map_info_window_1.SebmGoogleMapInfoWindow,] },],\n    };\n    return SebmGoogleMapMarker;\n}());\nexports.SebmGoogleMapMarker = SebmGoogleMapMarker;\n//# sourceMappingURL=google-map-marker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/directives/google-map-marker.js\n// module id = 386\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar polygon_manager_1 = require('../services/managers/polygon-manager');\n/**\n * SebmGoogleMapPolygon renders a polygon on a {@link SebmGoogleMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n * import { SebmGoogleMap, SebmGooglePolygon, LatLngLiteral } from 'angular2-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .semb-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <semb-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <semb-map-polygon [paths]=\"paths\">\n *      </semb-map-polygon>\n *    </semb-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nvar SebmGoogleMapPolygon = (function () {\n    function SebmGoogleMapPolygon(_polygonManager) {\n        this._polygonManager = _polygonManager;\n        /**\n         * Indicates whether this Polygon handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic\n         * property defines the mode of dragging. Defaults to false.\n         */\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control\n         * points shown at the vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will\n         * follow the curvature of the Earth. When false, edges of the polygon are\n         * rendered as straight lines in screen space. Note that the shape of a\n         * geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * The ordered sequence of coordinates that designates a closed loop.\n         * Unlike polylines, a polygon may consist of one or more paths.\n         *  As a result, the paths property may specify one or more arrays of\n         * LatLng coordinates. Paths are closed automatically; do not repeat the\n         * first vertex of the path as the last vertex. Simple polygons may be\n         * defined using a single array of LatLngs. More complex polygons may\n         * specify an array of arrays. Any simple arrays are converted into Arrays.\n         * Inserting or removing LatLngs from the Array will automatically update\n         * the polygon on the map.\n         */\n        this.paths = [];\n        /**\n         * This event is fired when the DOM click event is fired on the Polygon.\n         */\n        this.polyClick = new core_1.EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polygon.\n         */\n        this.polyDblClick = new core_1.EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polygon.\n         */\n        this.polyDrag = new core_1.EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polygon.\n         */\n        this.polyDragEnd = new core_1.EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polygon.\n         */\n        this.polyDragStart = new core_1.EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polygon.\n         */\n        this.polyMouseDown = new core_1.EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polygon.\n         */\n        this.polyMouseMove = new core_1.EventEmitter();\n        /**\n         * This event is fired on Polygon mouseout.\n         */\n        this.polyMouseOut = new core_1.EventEmitter();\n        /**\n         * This event is fired on Polygon mouseover.\n         */\n        this.polyMouseOver = new core_1.EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polygon\n         */\n        this.polyMouseUp = new core_1.EventEmitter();\n        /**\n         * This even is fired when the Polygon is right-clicked on.\n         */\n        this.polyRightClick = new core_1.EventEmitter();\n        this._polygonAddedToManager = false;\n        this._subscriptions = [];\n    }\n    /** @internal */\n    SebmGoogleMapPolygon.prototype.ngAfterContentInit = function () {\n        if (!this._polygonAddedToManager) {\n            this._init();\n        }\n    };\n    SebmGoogleMapPolygon.prototype.ngOnChanges = function (changes) {\n        if (!this._polygonAddedToManager) {\n            this._init();\n            return;\n        }\n        this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    };\n    SebmGoogleMapPolygon.prototype._init = function () {\n        this._polygonManager.addPolygon(this);\n        this._polygonAddedToManager = true;\n        this._addEventListeners();\n    };\n    SebmGoogleMapPolygon.prototype._addEventListeners = function () {\n        var _this = this;\n        var handlers = [\n            { name: 'click', handler: function (ev) { return _this.polyClick.emit(ev); } },\n            { name: 'dbclick', handler: function (ev) { return _this.polyDblClick.emit(ev); } },\n            { name: 'drag', handler: function (ev) { return _this.polyDrag.emit(ev); } },\n            { name: 'dragend', handler: function (ev) { return _this.polyDragEnd.emit(ev); } },\n            { name: 'dragstart', handler: function (ev) { return _this.polyDragStart.emit(ev); } },\n            { name: 'mousedown', handler: function (ev) { return _this.polyMouseDown.emit(ev); } },\n            { name: 'mousemove', handler: function (ev) { return _this.polyMouseMove.emit(ev); } },\n            { name: 'mouseout', handler: function (ev) { return _this.polyMouseOut.emit(ev); } },\n            { name: 'mouseover', handler: function (ev) { return _this.polyMouseOver.emit(ev); } },\n            { name: 'mouseup', handler: function (ev) { return _this.polyMouseUp.emit(ev); } },\n            { name: 'rightclick', handler: function (ev) { return _this.polyRightClick.emit(ev); } },\n        ];\n        handlers.forEach(function (obj) {\n            var os = _this._polygonManager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    SebmGoogleMapPolygon.prototype._updatePolygonOptions = function (changes) {\n        return Object.keys(changes)\n            .filter(function (k) { return SebmGoogleMapPolygon._polygonOptionsAttributes.indexOf(k) !== -1; })\n            .reduce(function (obj, k) {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n    };\n    /** @internal */\n    SebmGoogleMapPolygon.prototype.id = function () { return this._id; };\n    /** @internal */\n    SebmGoogleMapPolygon.prototype.ngOnDestroy = function () {\n        this._polygonManager.deletePolygon(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    SebmGoogleMapPolygon._polygonOptionsAttributes = [\n        'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\n        'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\n        'editable', 'visible'\n    ];\n    SebmGoogleMapPolygon.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'sebm-map-polygon',\n                    inputs: [\n                        'clickable',\n                        'draggable: polyDraggable',\n                        'editable',\n                        'fillColor',\n                        'fillOpacity',\n                        'geodesic',\n                        'paths',\n                        'strokeColor',\n                        'strokeOpacity',\n                        'strokeWeight',\n                        'visible',\n                        'zIndex',\n                    ],\n                    outputs: [\n                        'polyClick', 'polyDblClick', 'polyDrag', 'polyDragEnd', 'polyMouseDown', 'polyMouseMove',\n                        'polyMouseOut', 'polyMouseOver', 'polyMouseUp', 'polyRightClick'\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    SebmGoogleMapPolygon.ctorParameters = [\n        { type: polygon_manager_1.PolygonManager, },\n    ];\n    return SebmGoogleMapPolygon;\n}());\nexports.SebmGoogleMapPolygon = SebmGoogleMapPolygon;\n//# sourceMappingURL=google-map-polygon.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/directives/google-map-polygon.js\n// module id = 387\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar polyline_manager_1 = require('../services/managers/polyline-manager');\nvar google_map_polyline_point_1 = require('./google-map-polyline-point');\nvar polylineId = 0;\n/**\n * SebmGoogleMapPolyline renders a polyline on a {@link SebmGoogleMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { SebmGoogleMap, SebmGooglePolyline, SebmGooglePolylinePoint } from\n * 'angular2-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [SebmGoogleMap, SebmGooglePolyline, SebmGooglePolylinePoint],\n *  styles: [`\n *    .sebm-google-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <sebm-google-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <sebm-google-map-polyline>\n *          <sebm-google-map-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </sebm-google-map-polyline-point>\n *          <sebm-google-map-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </sebm-google-map-polyline-point>\n *      </sebm-google-map-polyline>\n *    </sebm-google-map>\n *  `\n * })\n * ```\n */\nvar SebmGoogleMapPolyline = (function () {\n    function SebmGoogleMapPolyline(_polylineManager) {\n        this._polylineManager = _polylineManager;\n        /**\n         * Indicates whether this Polyline handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic property defines the\n         * mode of dragging. Defaults to false.\n         */\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control points shown at the\n         * vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n         * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n         * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * Whether this polyline is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the DOM click event is fired on the Polyline.\n         */\n        this.lineClick = new core_1.EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polyline.\n         */\n        this.lineDblClick = new core_1.EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polyline.\n         */\n        this.lineDrag = new core_1.EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polyline.\n         */\n        this.lineDragEnd = new core_1.EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polyline.\n         */\n        this.lineDragStart = new core_1.EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polyline.\n         */\n        this.lineMouseDown = new core_1.EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polyline.\n         */\n        this.lineMouseMove = new core_1.EventEmitter();\n        /**\n         * This event is fired on Polyline mouseout.\n         */\n        this.lineMouseOut = new core_1.EventEmitter();\n        /**\n         * This event is fired on Polyline mouseover.\n         */\n        this.lineMouseOver = new core_1.EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polyline\n         */\n        this.lineMouseUp = new core_1.EventEmitter();\n        /**\n         * This even is fired when the Polyline is right-clicked on.\n         */\n        this.lineRightClick = new core_1.EventEmitter();\n        this._polylineAddedToManager = false;\n        this._subscriptions = [];\n        this._id = (polylineId++).toString();\n    }\n    /** @internal */\n    SebmGoogleMapPolyline.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        if (this.points.length) {\n            this.points.forEach(function (point) {\n                var s = point.positionChanged.subscribe(function () { _this._polylineManager.updatePolylinePoints(_this); });\n                _this._subscriptions.push(s);\n            });\n        }\n        if (!this._polylineAddedToManager) {\n            this._init();\n        }\n        var s = this.points.changes.subscribe(function () { return _this._polylineManager.updatePolylinePoints(_this); });\n        this._subscriptions.push(s);\n        this._polylineManager.updatePolylinePoints(this);\n    };\n    SebmGoogleMapPolyline.prototype.ngOnChanges = function (changes) {\n        if (!this._polylineAddedToManager) {\n            this._init();\n            return;\n        }\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return SebmGoogleMapPolyline._polylineOptionsAttributes.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { return options[k] = changes[k].currentValue; });\n        this._polylineManager.setPolylineOptions(this, options);\n    };\n    SebmGoogleMapPolyline.prototype._init = function () {\n        this._polylineManager.addPolyline(this);\n        this._polylineAddedToManager = true;\n        this._addEventListeners();\n    };\n    SebmGoogleMapPolyline.prototype._addEventListeners = function () {\n        var _this = this;\n        var handlers = [\n            { name: 'click', handler: function (ev) { return _this.lineClick.emit(ev); } },\n            { name: 'dbclick', handler: function (ev) { return _this.lineDblClick.emit(ev); } },\n            { name: 'drag', handler: function (ev) { return _this.lineDrag.emit(ev); } },\n            { name: 'dragend', handler: function (ev) { return _this.lineDragEnd.emit(ev); } },\n            { name: 'dragstart', handler: function (ev) { return _this.lineDragStart.emit(ev); } },\n            { name: 'mousedown', handler: function (ev) { return _this.lineMouseDown.emit(ev); } },\n            { name: 'mousemove', handler: function (ev) { return _this.lineMouseMove.emit(ev); } },\n            { name: 'mouseout', handler: function (ev) { return _this.lineMouseOut.emit(ev); } },\n            { name: 'mouseover', handler: function (ev) { return _this.lineMouseOver.emit(ev); } },\n            { name: 'mouseup', handler: function (ev) { return _this.lineMouseUp.emit(ev); } },\n            { name: 'rightclick', handler: function (ev) { return _this.lineRightClick.emit(ev); } },\n        ];\n        handlers.forEach(function (obj) {\n            var os = _this._polylineManager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    /** @internal */\n    SebmGoogleMapPolyline.prototype._getPoints = function () {\n        if (this.points) {\n            return this.points.toArray();\n        }\n        return [];\n    };\n    /** @internal */\n    SebmGoogleMapPolyline.prototype.id = function () { return this._id; };\n    /** @internal */\n    SebmGoogleMapPolyline.prototype.ngOnDestroy = function () {\n        this._polylineManager.deletePolyline(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    SebmGoogleMapPolyline._polylineOptionsAttributes = [\n        'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n        'zIndex'\n    ];\n    SebmGoogleMapPolyline.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'sebm-google-map-polyline',\n                    inputs: [\n                        'clickable', 'draggable: polylineDraggable', 'editable', 'geodesic', 'strokeColor',\n                        'strokeWeight', 'strokeOpacity', 'visible', 'zIndex'\n                    ],\n                    outputs: [\n                        'lineClick', 'lineDblClick', 'lineDrag', 'lineDragEnd', 'lineMouseDown', 'lineMouseMove',\n                        'lineMouseOut', 'lineMouseOver', 'lineMouseUp', 'lineRightClick'\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    SebmGoogleMapPolyline.ctorParameters = [\n        { type: polyline_manager_1.PolylineManager, },\n    ];\n    SebmGoogleMapPolyline.propDecorators = {\n        'points': [{ type: core_1.ContentChildren, args: [google_map_polyline_point_1.SebmGoogleMapPolylinePoint,] },],\n    };\n    return SebmGoogleMapPolyline;\n}());\nexports.SebmGoogleMapPolyline = SebmGoogleMapPolyline;\n//# sourceMappingURL=google-map-polyline.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/directives/google-map-polyline.js\n// module id = 388\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\n/**\n * SebmGoogleMapPolylinePoint represents one element of a polyline within a  {@link\n * SembGoogleMapPolyline}\n */\nvar SebmGoogleMapPolylinePoint = (function () {\n    function SebmGoogleMapPolylinePoint() {\n        /**\n         * This event emitter gets emitted when the position of the point changed.\n         */\n        this.positionChanged = new core_1.EventEmitter();\n    }\n    SebmGoogleMapPolylinePoint.prototype.ngOnChanges = function (changes) {\n        if (changes['latitude'] || changes['longitude']) {\n            var position = {\n                lat: changes['latitude'].currentValue,\n                lng: changes['longitude'].currentValue\n            };\n            this.positionChanged.emit(position);\n        }\n    };\n    SebmGoogleMapPolylinePoint.decorators = [\n        { type: core_1.Directive, args: [{ selector: 'sebm-google-map-polyline-point' },] },\n    ];\n    /** @nocollapse */\n    SebmGoogleMapPolylinePoint.ctorParameters = [];\n    SebmGoogleMapPolylinePoint.propDecorators = {\n        'latitude': [{ type: core_1.Input },],\n        'longitude': [{ type: core_1.Input },],\n        'positionChanged': [{ type: core_1.Output },],\n    };\n    return SebmGoogleMapPolylinePoint;\n}());\nexports.SebmGoogleMapPolylinePoint = SebmGoogleMapPolylinePoint;\n//# sourceMappingURL=google-map-polyline-point.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/directives/google-map-polyline-point.js\n// module id = 389\n// module chunks = 0","\"use strict\";\nvar google_maps_api_wrapper_1 = require('./services/google-maps-api-wrapper');\nexports.GoogleMapsAPIWrapper = google_maps_api_wrapper_1.GoogleMapsAPIWrapper;\nvar circle_manager_1 = require('./services/managers/circle-manager');\nexports.CircleManager = circle_manager_1.CircleManager;\nvar info_window_manager_1 = require('./services/managers/info-window-manager');\nexports.InfoWindowManager = info_window_manager_1.InfoWindowManager;\nvar marker_manager_1 = require('./services/managers/marker-manager');\nexports.MarkerManager = marker_manager_1.MarkerManager;\nvar polygon_manager_1 = require('./services/managers/polygon-manager');\nexports.PolygonManager = polygon_manager_1.PolygonManager;\nvar polyline_manager_1 = require('./services/managers/polyline-manager');\nexports.PolylineManager = polyline_manager_1.PolylineManager;\nvar lazy_maps_api_loader_1 = require('./services/maps-api-loader/lazy-maps-api-loader');\nexports.GoogleMapsScriptProtocol = lazy_maps_api_loader_1.GoogleMapsScriptProtocol;\nexports.LAZY_MAPS_API_CONFIG = lazy_maps_api_loader_1.LAZY_MAPS_API_CONFIG;\nexports.LazyMapsAPILoader = lazy_maps_api_loader_1.LazyMapsAPILoader;\nvar maps_api_loader_1 = require('./services/maps-api-loader/maps-api-loader');\nexports.MapsAPILoader = maps_api_loader_1.MapsAPILoader;\nvar noop_maps_api_loader_1 = require('./services/maps-api-loader/noop-maps-api-loader');\nexports.NoOpMapsAPILoader = noop_maps_api_loader_1.NoOpMapsAPILoader;\n//# sourceMappingURL=services.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/services.js\n// module id = 390\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar browser_globals_1 = require('../../utils/browser-globals');\nvar maps_api_loader_1 = require('./maps-api-loader');\n(function (GoogleMapsScriptProtocol) {\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(exports.GoogleMapsScriptProtocol || (exports.GoogleMapsScriptProtocol = {}));\nvar GoogleMapsScriptProtocol = exports.GoogleMapsScriptProtocol;\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nexports.LAZY_MAPS_API_CONFIG = new core_1.OpaqueToken('angular2-google-maps LAZY_MAPS_API_CONFIG');\nvar LazyMapsAPILoader = (function (_super) {\n    __extends(LazyMapsAPILoader, _super);\n    function LazyMapsAPILoader(config, w, d) {\n        _super.call(this);\n        this._config = config || {};\n        this._windowRef = w;\n        this._documentRef = d;\n    }\n    LazyMapsAPILoader.prototype.load = function () {\n        var _this = this;\n        if (this._scriptLoadingPromise) {\n            return this._scriptLoadingPromise;\n        }\n        var script = this._documentRef.getNativeDocument().createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        var callbackName = \"angular2GoogleMapsLazyMapsAPILoader\";\n        script.src = this._getScriptSrc(callbackName);\n        this._scriptLoadingPromise = new Promise(function (resolve, reject) {\n            _this._windowRef.getNativeWindow()[callbackName] = function () { resolve(); };\n            script.onerror = function (error) { reject(error); };\n        });\n        this._documentRef.getNativeDocument().body.appendChild(script);\n        return this._scriptLoadingPromise;\n    };\n    LazyMapsAPILoader.prototype._getScriptSrc = function (callbackName) {\n        var protocolType = (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n        var protocol;\n        switch (protocolType) {\n            case GoogleMapsScriptProtocol.AUTO:\n                protocol = '';\n                break;\n            case GoogleMapsScriptProtocol.HTTP:\n                protocol = 'http:';\n                break;\n            case GoogleMapsScriptProtocol.HTTPS:\n                protocol = 'https:';\n                break;\n        }\n        var hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n        var queryParams = {\n            v: this._config.apiVersion || '3',\n            callback: callbackName,\n            key: this._config.apiKey,\n            client: this._config.clientId,\n            channel: this._config.channel,\n            libraries: this._config.libraries,\n            region: this._config.region,\n            language: this._config.language\n        };\n        var params = Object.keys(queryParams)\n            .filter(function (k) { return queryParams[k] != null; })\n            .filter(function (k) {\n            // remove empty arrays\n            return !Array.isArray(queryParams[k]) ||\n                (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n        })\n            .map(function (k) {\n            // join arrays as comma seperated strings\n            var i = queryParams[k];\n            if (Array.isArray(i)) {\n                return { key: k, value: i.join(',') };\n            }\n            return { key: k, value: queryParams[k] };\n        })\n            .map(function (entry) { return entry.key + \"=\" + entry.value; })\n            .join('&');\n        return protocol + \"//\" + hostAndPath + \"?\" + params;\n    };\n    LazyMapsAPILoader.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    LazyMapsAPILoader.ctorParameters = [\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [exports.LAZY_MAPS_API_CONFIG,] },] },\n        { type: browser_globals_1.WindowRef, },\n        { type: browser_globals_1.DocumentRef, },\n    ];\n    return LazyMapsAPILoader;\n}(maps_api_loader_1.MapsAPILoader));\nexports.LazyMapsAPILoader = LazyMapsAPILoader;\n//# sourceMappingURL=lazy-maps-api-loader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/services/maps-api-loader/lazy-maps-api-loader.js\n// module id = 391\n// module chunks = 0","\"use strict\";\nvar WindowRef = (function () {\n    function WindowRef() {\n    }\n    WindowRef.prototype.getNativeWindow = function () { return window; };\n    return WindowRef;\n}());\nexports.WindowRef = WindowRef;\nvar DocumentRef = (function () {\n    function DocumentRef() {\n    }\n    DocumentRef.prototype.getNativeDocument = function () { return document; };\n    return DocumentRef;\n}());\nexports.DocumentRef = DocumentRef;\nexports.BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\n//# sourceMappingURL=browser-globals.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/utils/browser-globals.js\n// module id = 392\n// module chunks = 0","\"use strict\";\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nvar NoOpMapsAPILoader = (function () {\n    function NoOpMapsAPILoader() {\n    }\n    NoOpMapsAPILoader.prototype.load = function () {\n        if (!window.google || !window.google.maps) {\n            throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n        }\n        return Promise.resolve();\n    };\n    ;\n    return NoOpMapsAPILoader;\n}());\nexports.NoOpMapsAPILoader = NoOpMapsAPILoader;\n//# sourceMappingURL=noop-maps-api-loader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/services/maps-api-loader/noop-maps-api-loader.js\n// module id = 393\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar google_map_1 = require('./directives/google-map');\nvar google_map_circle_1 = require('./directives/google-map-circle');\nvar google_map_info_window_1 = require('./directives/google-map-info-window');\nvar google_map_marker_1 = require('./directives/google-map-marker');\nvar google_map_polygon_1 = require('./directives/google-map-polygon');\nvar google_map_polyline_1 = require('./directives/google-map-polyline');\nvar google_map_polyline_point_1 = require('./directives/google-map-polyline-point');\nvar lazy_maps_api_loader_1 = require('./services/maps-api-loader/lazy-maps-api-loader');\nvar lazy_maps_api_loader_2 = require('./services/maps-api-loader/lazy-maps-api-loader');\nvar maps_api_loader_1 = require('./services/maps-api-loader/maps-api-loader');\nvar browser_globals_1 = require('./utils/browser-globals');\n/**\n * @internal\n */\nfunction coreDirectives() {\n    return [\n        google_map_1.SebmGoogleMap, google_map_marker_1.SebmGoogleMapMarker, google_map_info_window_1.SebmGoogleMapInfoWindow, google_map_circle_1.SebmGoogleMapCircle,\n        google_map_polygon_1.SebmGoogleMapPolygon, google_map_polyline_1.SebmGoogleMapPolyline, google_map_polyline_point_1.SebmGoogleMapPolylinePoint\n    ];\n}\nexports.coreDirectives = coreDirectives;\n;\n/**\n * The angular2-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nvar AgmCoreModule = (function () {\n    function AgmCoreModule() {\n    }\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    AgmCoreModule.forRoot = function (lazyMapsAPILoaderConfig) {\n        return {\n            ngModule: AgmCoreModule,\n            providers: browser_globals_1.BROWSER_GLOBALS_PROVIDERS.concat([\n                { provide: maps_api_loader_1.MapsAPILoader, useClass: lazy_maps_api_loader_1.LazyMapsAPILoader },\n                { provide: lazy_maps_api_loader_2.LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig }\n            ]),\n        };\n    };\n    AgmCoreModule.decorators = [\n        { type: core_1.NgModule, args: [{ declarations: coreDirectives(), exports: coreDirectives() },] },\n    ];\n    /** @nocollapse */\n    AgmCoreModule.ctorParameters = [];\n    return AgmCoreModule;\n}());\nexports.AgmCoreModule = AgmCoreModule;\n//# sourceMappingURL=core-module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-google-maps/core/core-module.js\n// module id = 394\n// module chunks = 0","import { Component } from '@angular/core';\r\n\r\nimport { LocationService } from './../../Services/location.service';\r\nimport { WeatherService } from './../../Services/weather.service';\r\nimport { LoggerService } from './../../Services/logger.service';\r\n\r\nimport { CityCoordinates } from './../../Entities/cityCoordinates';\r\nimport { StatusMessage } from './../../Enum/statusMessage';\r\n\r\n@Component({\r\n    selector: 'map',\r\n    templateUrl: './app/Components/Map/map.component.html',\r\n    styleUrls: ['./app/Components/Map/map.component.css']\r\n})\r\n\r\nexport class MapComponent {\r\n    private componentName: string = 'Map component';\r\n    private centerCoord: CityCoordinates = new CityCoordinates(0, 0);\r\n\r\n    constructor(\r\n        private locationService: LocationService,\r\n        private weatherService: WeatherService,\r\n        private loggerService: LoggerService\r\n    ) {\r\n        locationService.getCenterCoord().subscribe(coord => {\r\n            this.centerCoord = coord;\r\n            this.loggerService.log(this.componentName, 'Get geo coordinates', StatusMessage.Info);\r\n        })\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/Components/Map/map.component.ts","import { NgModule }      from '@angular/core';\r\n\r\nimport { WeatherInCityComponent } from './weatherInCity.component';\r\n\r\nimport {WeatherPipe } from './../../Pipes/weather.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WeatherInCityComponent,\r\n    WeatherPipe,\r\n  ],\r\n  exports: [ \r\n    WeatherInCityComponent \r\n  ]\r\n})\r\n\r\nexport class WeatherInCityModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/Components/WeatherInCity/weatherInCity.module.ts","import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { LoggerService } from './../../Services/logger.service';\r\n\r\nimport { City } from './../../Entities/city';\r\nimport { CityCoordinates } from './../../Entities/cityCoordinates';\r\nimport { StatusMessage } from './../../Enum/statusMessage';\r\n\r\n@Component({\r\n    selector: 'weather-in-city',\r\n    templateUrl: './app/Components/WeatherInCity/weatherInCity.component.html',\r\n    styleUrls: ['./app/Components/WeatherInCity/weatherInCity.component.css']\r\n})\r\n\r\nexport class WeatherInCityComponent {\r\n\r\n    private componentName: string = 'WeatherInCity component';\r\n    private cityName: string;\r\n\r\n    constructor(\r\n        private loggerService: LoggerService\r\n    ){}\r\n\r\n    refreshName(cityName: string):void {\r\n        if (cityName) {\r\n            this.cityName = cityName;\r\n            this.loggerService.log(this.componentName, 'Click on \"Get weather\" button', StatusMessage.Info);\r\n        }\r\n    } \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/Components/WeatherInCity/weatherInCity.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nimport { WeatherService } from './../Services/weather.service';\r\nimport { LoggerService } from './../Services/logger.service';\r\n\r\nimport { City } from './../Entities/city';\r\nimport { StatusMessage } from './../Enum/statusMessage';\r\n\r\nclass CityWeather {\r\n    name: string;\r\n    city: City;\r\n    timeRequest: Date;\r\n    isRequestGoes: boolean;\r\n\r\n    constructor(name: string, city: City = null, timeRequest: Date = null, isRequestGoes: boolean = false){\r\n        this.name = name;\r\n        this.city = city;\r\n        this.timeRequest = timeRequest;\r\n        this.isRequestGoes = isRequestGoes;\r\n    }\r\n}\r\n\r\n@Pipe({\r\n    name: 'weather',\r\n    pure: false\r\n})\r\n\r\nexport class WeatherPipe implements PipeTransform {\r\n    private pipeName: string = 'Weather pipe';\r\n    private cities: CityWeather[];\r\n\r\n    constructor (\r\n        private weatherService: WeatherService,\r\n        private loggerService: LoggerService\r\n    ) {\r\n        this.cities = [];\r\n    }\r\n\r\n    transform(value: string):string {\r\n        let resultHtml: string = '';\r\n\r\n        if (value) {\r\n\r\n            value = value.trim().toUpperCase();\r\n\r\n            let cityWeather:CityWeather = this.cities.find(cw => cw.name === value);\r\n\r\n            if (cityWeather) {\r\n                this.loggerService.log(this.pipeName, `Get ${ cityWeather.name } city weather from array`, StatusMessage.Info);\r\n            } else {\r\n                cityWeather = new CityWeather(value);\r\n                this.cities.push(cityWeather);\r\n            }\r\n\r\n            if (!cityWeather.isRequestGoes && (!cityWeather.timeRequest || (new Date()).getTime() - cityWeather.timeRequest.getTime() > 10*60*1000)) {\r\n                cityWeather.isRequestGoes = true;\r\n                this.weatherService.getCityWeatherByName(value).subscribe(city => {\r\n                   cityWeather.timeRequest = new Date();\r\n                   cityWeather.city = city;\r\n                   cityWeather.isRequestGoes = false;\r\n                   this.loggerService.log(this.pipeName, `Get ${ city.name } city weather from API`, StatusMessage.Info);\r\n                })\r\n            }\r\n\r\n            if (cityWeather && cityWeather.city) {\r\n\r\n                resultHtml = `<table class=\"weather-table\">\r\n                                <caption class=\"weather-table-caption\">\r\n                                    <div>Weather in ${ cityWeather.city.name }</div>\r\n                                    <div>Last refreshed ${ ('0'+ cityWeather.timeRequest.getHours().toString()).slice(-2) + ':' +  ('0' + cityWeather.timeRequest.getMinutes().toString()).slice(-2) }</div>\r\n                                </caption>\r\n                                <tbody>\r\n                                    <tr class=\"weather-table-tr\">\r\n                                        <td>Temperature</td>\r\n                                        <td>${ cityWeather.city.main.temp.toFixed(0) }</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Wind</td>\r\n                                        <td>${ cityWeather.city.wind.speed }</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Cloudiness</td>\r\n                                        <td>${ cityWeather.city.clouds.all }</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Pressure</td>\r\n                                        <td>${ cityWeather.city.main.pressure }</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Humidity</td>\r\n                                        <td>${ cityWeather.city.main.humidity }</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Geo coordinates</td>\r\n                                        <td>[${ cityWeather.city.coord.lat.toFixed(2) }, ${ cityWeather.city.coord.lon.toFixed(2) }]</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>` \r\n            } else {\r\n                resultHtml = '<div class=\"nodata\">No data</div>';\r\n            }\r\n        }\r\n\r\n        return resultHtml;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./app/Pipes/weather.pipe.ts","/// <reference path=\"../typings/index.d.ts\" />\r\n/// <reference path=\"../node_modules/@types/node/index.d.ts\"/>\r\n/// <reference path=\"../node_modules/rxjs/rx.d.ts\"/>  \r\n\r\nimport { Component, NgZone, ChangeDetectorRef, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'my-app',\r\n    templateUrl: './app/app.component.html',\r\n    styleUrls:  ['./app/app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n\r\n    timeStartTask: Date;\r\n    timeGetStable: number = 0; \r\n\r\n    constructor(private zone: NgZone, private changeDetectorRef: ChangeDetectorRef) {\r\n        this.timeStartTask = new Date();\r\n    }\r\n\r\n    ngOnInit () {\r\n        this.zone.onUnstable.subscribe(() => { \r\n            this.timeStartTask = new Date()\r\n        });\r\n        this.zone.onStable.subscribe(() => {\r\n            this.timeGetStable = (new Date()).getTime() - this.timeStartTask.getTime()\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/app.component.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'pagenotfound',\r\n    template: `I am sorry, page not found (((`\r\n})\r\n\r\nexport class PageNotFoundComponent {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/Components/PageNotFound/pagenotfound.component.ts"],"sourceRoot":""}